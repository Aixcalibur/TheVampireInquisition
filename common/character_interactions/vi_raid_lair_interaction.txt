# # Raid Estate
# vi_start_raid_lair_interaction = {
# 	icon = icon_raid_estate
# 	interface_priority = 90
# 	category = interaction_category_admin
# 	send_name = START_SCHEME 
# 	scheme = vi_raid_lair
# 	ignores_pending_interaction_block = yes  
# 	ai_frequency = 60

# 	ai_targets = { ai_recipients = liege }
# 	ai_targets = {
# 		ai_recipients = neighboring_rulers
# 		max = 10
# 	}
# 	ai_targets = {
# 		ai_recipients = peer_vassals
# 		max = 20
# 	}
# 	ai_targets = {
# 		ai_recipients = vassals
# 		max = 20
# 	}

# 	# cooldown = { years = 5 }

# 	highlighted_reason = start_raid_estate_interaction_HIGHLIGHTED

# 	# is_highlighted = { scope:actor.var:raid_estate_permission ?= scope:recipient.house }

# 	is_shown = {
# 		scope:actor = { government_allows = administrative }
# 		scope:recipient.house.house_head ?= {
# 			exists = house
# 			NOT = { house = scope:actor.house }
# 			has_government = vi_vampire_government
# 			any_held_title = { is_noble_family_title = yes }
# 		}
# 	}

# 	is_valid_showing_failures_only = {
# 		scope:actor = {
# 			is_available_adult = yes
# 		}
# 		scope:recipient.house.house_head ?= {
# 			custom_tooltip = {
# 				text = raid_estate_noble_family_target_tt
# 				any_held_title = { is_noble_family_title = yes }
# 			}
# 			custom_tooltip = {
# 				text = raid_estate_estate_tt
# 				domicile ?= { is_domicile_type = vi_lair }
# 			}
# 		}

# 		OR = {
# 			scope:actor = {
# 				vi_is_vampire_trigger = yes
# 			}
# 			scope:recipient = {
# 				has_trait = vi_exposed_vampire
# 			}
# 			scope:recipient = {
# 				any_secret = {
# 					AND = {
# 						secret_type = secret_vi_vampire
# 						is_known_by = scope:actor
# 					}
# 				}
# 			}
# 		}
# 	}

# 	desc = start_raid_estate_interaction_desc

# 	# Scheme Starter Packages
# 	options_heading = schemes.t.agent_packages
# 	send_options_exclusive = yes
# 	## Balanced agents.
# 	send_option = {
# 		flag = agent_focus_balance
# 		current_description = start_raid_estate_interaction.tt.agent_focus_balance
# 	}
# 	## Focused on Success Chance.
# 	send_option = {
# 		flag = agent_focus_success
# 		current_description = start_raid_estate_interaction.tt.agent_focus_success
# 	}
# 	## Focused on Speed.
# 	send_option = {
# 		flag = agent_focus_speed
# 		current_description = start_raid_estate_interaction.tt.agent_focus_speed
# 	}
# 	## Focused on Secrecy.
# 	send_option = {
# 		flag = agent_focus_secrecy
# 		current_description = start_raid_estate_interaction.tt.agent_focus_secrecy
# 	}

# 	on_accept = {
# 		scope:recipient = { 
# 			custom_tooltip = raid_estate_kill_maim_imprison_house_members_tt
# 			custom_tooltip = raid_estate_destroy_buildings_tt
# 			custom_tooltip = raid_estate_house_modifier_tt
# 			random_held_title = {
# 				limit = { is_noble_family_title = yes }
# 				save_scope_as = target_title
# 			}
# 		}
# 		scope:actor = {
# 			send_interface_toast = {
# 				type = event_toast_effect_neutral
# 				title = start_raid_estate_notification
# 				left_icon = scope:recipient					
# 				right_icon = scope:target_title
# 				# Success.
# 				if = {
# 					limit = { scope:agent_focus_success ?= yes }
# 					begin_scheme_with_agents_effect = {
# 						SCHEME_TYPE = raid_estate
# 						TARGET_TYPE = target_character
# 						TARGET_SCOPE = scope:recipient
# 						# Success.
# 						AGENT_1 = agent_scout
# 						AGENT_2 = agent_scout
# 						AGENT_3 = agent_muscle
# 						# Speed.
# 						AGENT_4 = agent_infiltrator
# 						# Secrecy.
# 						AGENT_5 = agent_lookout
# 					}
# 				}
# 				# Speed.
# 				else_if = {
# 					limit = { scope:agent_focus_speed ?= yes }
# 					begin_scheme_with_agents_effect = {
# 						SCHEME_TYPE = raid_estate
# 						TARGET_TYPE = target_character
# 						TARGET_SCOPE = scope:recipient
# 						# Speed.
# 						AGENT_1 = agent_infiltrator
# 						AGENT_2 = agent_infiltrator
# 						AGENT_3 = agent_footpad
# 						# Success.
# 						AGENT_4 = agent_scout
# 						# Secrecy.
# 						AGENT_5 = agent_lookout
# 					}
# 				}
# 				# Secrecy.
# 				else_if = {
# 					limit = { scope:agent_focus_secrecy ?= yes }
# 					begin_scheme_with_agents_effect = {
# 						SCHEME_TYPE = raid_estate
# 						TARGET_TYPE = target_character
# 						TARGET_SCOPE = scope:recipient
# 						# Secrecy.
# 						AGENT_1 = agent_lookout
# 						AGENT_2 = agent_lookout
# 						AGENT_3 = agent_alibi
# 						# Success.
# 						AGENT_4 = agent_scout
# 						# Speed.
# 						AGENT_5 = agent_infiltrator
# 					}
# 				}
# 				# Balanced.
# 				else = {
# 					begin_scheme_with_agents_effect = {
# 						SCHEME_TYPE = raid_estate
# 						TARGET_TYPE = target_character
# 						TARGET_SCOPE = scope:recipient
# 						# Success.
# 						AGENT_1 = agent_scout
# 						AGENT_2 = agent_muscle
# 						# Speed.
# 						AGENT_3 = agent_infiltrator
# 						AGENT_4 = agent_footpad
# 						# Secrecy.
# 						AGENT_5 = agent_lookout
# 					}
# 				}
# 			}
# 			# Scheme progress bonus from education
# 			education_5_scheme_progress_effect = { SKILL = intrigue }
# 			# Scheme bonuses from being the emperor/dominant family/powerful family
# 			ep3_actor_scheme_modifier_effect = yes

# 			custom_tooltip = raid_estate_gain_coin_tt
# 			if = {
# 				limit = {
# 					has_relation_rival = scope:recipient
# 				}
# 				custom_tooltip = raid_estate_nemesis_relation_tt
# 			}
# 			else = {
# 				custom_tooltip = raid_estate_rival_relation_tt
# 			}

# 			stress_impact = {
# 				content = medium_stress_impact_gain
# 			}
# 			if = {
# 				limit = {
# 					has_relation_nemesis = scope:recipient
# 				}
# 				stress_impact = { base = major_stress_impact_loss }
# 			}
# 			else_if = {
# 				limit = {
# 					has_relation_rival = scope:recipient
# 				}
# 				stress_impact = { base = medium_stress_impact_loss }
# 			}
# 		}
# 	}

# 	ai_potential = {
# 		NOT = {
# 			any_scheme = { is_hostile = yes }
# 		}
# 		always = no
# 		# any_held_title = { is_noble_family_title = yes }
# 	}
	
# 	auto_accept = yes

# 	ai_will_do = {
# 		base = -20
# 		#Personality
# 		modifier = {
# 			has_trait = vengeful
# 			add = 15
# 		}
# 		modifier = {
# 			has_trait = forgiving
# 			add = -15
# 		}
# 		modifier = {
# 			has_trait = brave
# 			add = 15
# 		}
# 		modifier = {
# 			has_trait = craven
# 			add = -15
# 		}
# 		# Relationships
# 		modifier = {
# 			add = -25
# 			has_any_moderate_good_relationship_with_character_trigger = { CHARACTER = scope:recipient }
# 		}
# 		modifier = {
# 			add = -50
# 			has_any_best_good_relationship_with_character_trigger = { CHARACTER = scope:recipient }
# 		}
# 		modifier = {
# 			add = 15
# 			has_any_mild_bad_relationship_with_character_trigger = { CHARACTER = scope:recipient }
# 		}
# 		modifier = {
# 			add = 25
# 			has_any_moderate_bad_relationship_with_character_trigger = { CHARACTER = scope:recipient }
# 		}
# 		modifier = {
# 			add = 50
# 			has_any_worst_bad_relationship_with_character_trigger = { CHARACTER = scope:recipient }
# 		}
# 		modifier = {
# 			scope:recipient.house = scope:actor.top_liege.house
# 			add = -25
# 		}
# 		opinion_modifier = {
# 			who = scope:actor
# 			opinion_target = scope:recipient
# 			multiplier = -0.25
# 		}
# 	}
# }