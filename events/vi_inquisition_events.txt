namespace = vi_inquisitions

vi_inquisition.0001 = {
	type = character_event
	title = vi_inquisition.0001.t
	desc = vi_inquisition.0001.desc
	
	theme = war

	left_portrait = {
		character = scope:recipient
		animation = war_defender
	}

	right_portrait = {
		character = root
		animation = war_attacker
	}

	trigger = {
		exists = scope:recipient
		scope:recipient = {
			has_trait = vi_exposed_vampire
		}
	}

	immediate = {
		add_character_flag = vi_inquisition_leader

		scope:recipient = {
			add_character_flag = vi_inquisition_target
		}
	}

	option = {
		name = vi_inquisition.0001.a

		scope:recipient = {
			start_war = {
				casus_belli = vi_inquisition_defense_cb
				target = root
			}

			trigger_event = {
				id = vi_inquisition.0002
			}
		}
	}

	option = {
		name = vi_inquisition.0001.b
	}
}

vi_inquisition.0002 = {
	type = character_event
	title = vi_inquisition.0002.t
	desc = vi_inquisition.0002.desc
	
	theme = war

	left_portrait = {
		character = scope:actor
		animation = war_defender
	}

	right_portrait = {
		character = root
		animation = war_attacker
	}

	trigger = {
		
	}

	immediate = {
		show_as_tooltip = {
			scope:recipient = {
				start_war = {
					casus_belli = vi_inquisition_defense_cb
					target = scope:actor
				}
			}	
		}
	}

	option = {
		name = vi_inquisition.0002.a
	}

	option = {
		name = vi_inquisition.0002.b
		trigger = {
			NOT = {
				root = scope:recipient
			}
		}
	}
}

#Landless Inquisition
vi_inquisition.1001 = {
	type = character_event
	title = vi_inquisition.1001.t
	desc = vi_inquisition.1001.desc
	
	theme = war

	left_portrait = {
		character = scope:recipient
		animation = war_defender
	}

	right_portrait = {
		character = root
		animation = war_attacker
	}

	trigger = {
		
	}

	immediate = {
		
	}

	option = {
		name = vi_inquisition.1001.a

		trigger_event = vi_inquisition.1003

		scope:recipient = {
			trigger_event = vi_inquisition.1002
		}
	}
}

vi_inquisition.1002 = {
	type = character_event
	title = vi_inquisition.1002.t
	desc = vi_inquisition.1002.desc
	
	theme = war

	left_portrait = {
		character = scope:recipient
		animation = war_defender
	}

	right_portrait = {
		character = scope:actor
		animation = war_attacker
	}

	trigger = {
		
	}

	immediate = {
		show_as_tooltip = {
			scope:war = {
				add_defender = root
			}
		}
	}

	option = {
		name = vi_inquisition.1002.a
	}
}

vi_inquisition.1003 = {
	hidden = yes
	immediate = {
		start_war = {
			casus_belli = vi_inquisition_landless_war
			target = scope:vi_county_owner
		}
	}
}

vi_inquisition.2001 = {
	type = letter_event
	sender = scope:peasant_leader
	opening = {
		desc = "VI_FACTION_DEMAND_POPULIST"
	}
	desc = {
		first_valid = {
			# triggered_desc = {
			# 	trigger = {
			# 		government_allows = state_faith
			# 		primary_title.state_faith != scope:peasant_leader.faith
			# 	}
			# 	desc = FACTION_DEMAND_POPULIST_DESC_ADMIN
			# }
			# triggered_desc = {
			# 	trigger = {
			# 		NOT = { culture = scope:peasant_leader.culture }
			# 		faith = scope:peasant_leader.faith
			# 	}
			# 	desc = "FACTION_DEMAND_POPULIST_DESC_CULTURE"
			# }
			# triggered_desc = {
			# 	trigger = {
			# 		NOT = { faith = scope:peasant_leader.faith }
			# 		culture = scope:peasant_leader.culture
			# 	}
			# 	desc = "FACTION_DEMAND_POPULIST_DESC_FAITH"
			# }
			desc = "VI_FACTION_DEMAND_POPULIST_DESC"
		}
	}

	trigger = {
		exists = scope:faction
		exists = scope:peasant_leader
		scope:peasant_leader.joined_faction = scope:faction
	}

	on_trigger_fail = {
		debug_log = "Popular Faction tried to press claim (probably) without existing peasant_leader"
		debug_log_scopes = yes
		debug_log = "Popular Faction error reporting complete"
	}

	immediate = {
		every_realm_province = {
			county = { add_to_list = remaining_counties_list }
		}
		scope:faction = {
			every_faction_county_member = { remove_from_list = remaining_counties_list }
		}

		
	}

	# Option A: Convert to the faction's faith or culture.
	

	# Option D: Switch State Faith to the faction faith
	# (out of order so it appears correctly in the event. this option has been added subsequently)
	

	# Option B: Grant the faction independence.
	option = {
		name = "FACTION_DEMAND_POPULIST_ACCEPT_GRANT_INDEPENDENCE"
		trigger = { # AI should not give the faction independence if a player is targeted by the faction.
			NAND = {
				scope:faction = {
					has_variable = faction_targets_player
				}
				is_ai = yes
			}
			# Only allow this option for governments with state faith it's a cultural populist faction
			trigger_if = {
				limit = { government_allows = administrative }
				primary_title.state_faith = scope:peasant_leader.faith
				culture != scope:peasant_leader.culture
			}
		}
		vi_inquisition_defection_effect = yes

		# This effect should always be placed here, _before_ all the other effects in the block.
		trigger_event = { on_action = on_faction_demand_accepted }
		
		add_prestige_level = -1
		if = {
			limit = {
				dread > 0
			}
			add_dread = medium_dread_loss
		}

		successful_popular_revolt_outcome_effect = {
			FACTION_LEADER = scope:peasant_leader
			TARGET_TITLE = scope:target_title
			SOURCE_GOVERNMENT = root
		}

		# If the faction includes ALL of our counties, notify the player that it will leave them landless!
		if = {
			limit = {
				any_in_list = {
					list = remaining_counties_list
					count < 1
				}
			}
			custom_tooltip = FACTION_DEMAND_POPULIST_ACCEPT_GRANT_INDEPENCE_TT
		}

		# Struggle Catalysts.
		# Should rename the Catalysts?
		if = {
			limit = {
				is_important_or_vip_struggle_character = yes
				any_character_struggle = {
					involvement = involved
					activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
						CATALYST = catalyst_accepted_demand_from_faction_requesting_culture_faith_conversion
						CHAR = scope:faction_leader
					}
				}
			}
			every_character_struggle = {
				involvement = involved
				limit = {
					activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
						CATALYST = catalyst_accepted_demand_from_faction_requesting_culture_faith_conversion
						CHAR = scope:faction_leader
					}
				}
				activate_struggle_catalyst = {
					catalyst = catalyst_accepted_demand_from_faction_requesting_culture_faith_conversion
					character = root
				}
			}
		}

		hidden_effect = {
			if = {
				limit = {
					exists = scope:faction
				}
				scope:faction = {
					clean_revolt_county_modifiers_from_faction_members_effect = yes
					destroy_faction = yes
				}
			}
		}

		ai_chance = {
			base = 0
			compare_modifier = { # Stronger factions increase the chance of an AI ruler capitulating; at 200% ruler army strength, this maxes out at +50% chance to accept demands.
				value = {
					value = scope:faction.faction_power
					subtract = 100
					multiply = 0.5
				}
				max = 50
			}
			compare_modifier = { # Craven rulers can get up to +37% chance to accept demands.
				value = ai_boldness
				multiplier = -0.5
			}
			modifier = {
				factor = 0.1
				any_ally = {
					NOR = {
						target_is_liege_or_above = root
						target_is_vassal_or_below = root
					}
					max_military_strength > root.max_military_strength
				}
			}
			compare_modifier = {
				value = debt_level
				multiplier = 25
			}
			modifier = {
				add = -50
				is_at_war = no
				primary_title.tier >= tier_kingdom
			}
			modifier = {
				add = -150
				is_at_war = no
				primary_title.tier >= tier_empire
			}
			
			modifier = {
				add = -5000
				OR = {
					has_title = title:e_mongol_empire
					has_title = title:e_ilkhanate
					has_title = title:e_golden_horde
					has_title = title:e_chagatai
					has_title = title:e_black_horde
					has_title = title:e_white_horde
					has_title = title:e_aarlud_khanate
					has_title = title:e_togskol_khanate
					has_title = title:e_baruun_khanate
					has_title = title:e_byzantium
					ai_has_conqueror_personality = yes
					government_allows = state_faith
				}
			}
		}
	}

	# Option C: Refuse the demand and start a war.
	option = {
		name = FACTION_DEMAND_POPULIST_REFUSE

		# This effect should always be placed here, _before_ all the other effects in the block.
		trigger_event = { on_action = on_faction_demand_rejected }

		scope:faction = {
			faction_start_war = {
				title = scope:target_title
			}
		}
		
		custom_tooltip = FACTION_DEMAND_POPULIST_REFUSE_TT
		vi_inquisition_defection_effect = yes
		if = { # Send follow up event to affected vassals.
			limit = {
				list_size = {
					name = popular_faction_vassal_targets
					value > 0
				}
			}
			every_in_list = {
				list = popular_faction_vassal_targets
				trigger_event = faction_demand.0099
			}
		}

		ai_chance = {
			base = 100
			compare_modifier = { # Weaker factions increase the chance of an AI ruler refusing; at 80% army strength (minimum), this will be +20; at 200% army strength, this will max out at -50.
				value = {			
					value = scope:faction.faction_power
					subtract = 100
					multiply = -1
				}
				min = -50
			}
			compare_modifier = { # Brave rulers get up to a 50% bonus chance to refuse.
				value = ai_boldness
				multiplier = -0.5
				min = -50
			}
			modifier = {
				factor = 1.5
				any_ally = {
					NOR = {
						target_is_liege_or_above = root
						target_is_vassal_or_below = root
					}
					max_military_strength > root.max_military_strength
				}
			}
			compare_modifier = {
				value = debt_level
				multiplier = -25
			}
			modifier = {
				add = 5000
				OR = {
					has_title = title:e_mongol_empire
					has_title = title:e_ilkhanate
					has_title = title:e_golden_horde
					has_title = title:e_chagatai
					has_title = title:e_black_horde
					has_title = title:e_white_horde
					has_title = title:e_aarlud_khanate
					has_title = title:e_togskol_khanate
					has_title = title:e_baruun_khanate
					has_title = title:e_byzantium
					ai_has_conqueror_personality = yes
				}
			}
		}
	}
	
	after = {
		if = {
			limit = {
				exists = scope:faction
				scope:faction = {
					has_variable = faction_targets_player
				}
			}
			scope:faction = {
				remove_variable = faction_targets_player
			}
		}
	}
}

vi_inquisition.2011 = { #Peasant Inquisition
	type = letter_event
	sender = scope:peasant_leader
	opening = "VI_FACTION_DEMAND_PEASANT"
	desc = VI_FACTION_DEMAND_PEASANT_DESC

	trigger = {
		exists = scope:faction
		exists = scope:peasant_leader
		scope:peasant_leader.joined_faction = scope:faction
	}

	on_trigger_fail = {
		debug_log = "Peasant Faction tried to press claim (probably) without existing peasant_leader"
		debug_log_scopes = yes
		debug_log = "Peasant Faction error reporting complete"
	}

	# option = {
	# 	name = "FACTION_DEMAND_PEASANT_ACCEPT"

	# 	# LEGITIMACY LOSS FOR ACCEPTING FACTION DEMANDS
	# 	faction_accept_demand_legitimacy_effect = yes

	# 	peasant_faction_demands_enforced = {FACTION = scope:faction}

	# 	ai_chance = {
	# 		base = 0
	# 		ai_value_modifier = {
	# 			ai_boldness = -4
	# 		}
	# 		modifier = {
	# 			add = 50
	# 			scope:faction = { faction_power >= 100 }
	# 		}
	# 		modifier = {
	# 			add = 50
	# 			scope:faction = { faction_power >= 110 }
	# 		}
	# 		modifier = {
	# 			add = 50
	# 			scope:faction = { faction_power >= 120 }
	# 		}
	# 		modifier = {
	# 			add = 50
	# 			scope:faction = { faction_power >= 130 }
	# 		}
	# 		modifier = {
	# 			add = 50
	# 			scope:faction = { faction_power >= 140 }
	# 		}
	# 		modifier = {
	# 			add = 50
	# 			scope:faction = { faction_power >= 150 }
	# 		}
	# 		modifier = {
	# 			add = -50
	# 			scope:faction.faction_target = {
	# 				is_at_war = no
	# 				primary_title.tier >= tier_kingdom
	# 			}
	# 		}
	# 		modifier = {
	# 			add = -150
	# 			scope:faction.faction_target = {
	# 				is_at_war = no
	# 				primary_title.tier >= tier_empire
	# 			}
	# 		}
	# 	}
	# }

	option = {
		name = "VI_FACTION_DEMAND_PEASANT_REFUSE"

		scope:faction = {
			faction_start_war = {}
			
			# This needs to run after 'faction_start_war' or the troops won't spawn correctly.
			faction_spawn_member_county_armies_effect = {
				FACTION = scope:faction
				ARMY_OWNER = scope:peasant_leader
				PEASANT_ARMY_NAME = peasant_faction_event_troops
			}	
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_boldness = 4
			}
			modifier = {
				add = 50
				scope:faction = { faction_power < 90 }
			}
			modifier = {
				add = 50
				scope:faction = { faction_power < 80 }
			}
		}
	}
}