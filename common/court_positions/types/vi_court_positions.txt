vi_template_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = duchy # Should only be available for dukes and above
	skill = martial

	opinion = {
		#value = regular_court_position_opinion
		value = 10
		if = {
			limit = {
				scope:liege = {
					has_government = vi_vampire_government
				}
			}
			add = {
				value = vi_courtier_opinion_value
				multiply = -1
			}
		}
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 40 80 120 160 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = court_position_aptitude_boon_voyager_trait
		add = court_position_vi_galvanize_perk
		
		if = {
			limit = {
				vi_is_Anunnaki_trigger = yes
			}
			add = {
				value = 10
				desc = court_position_anunnaki
			}
		}
		if = {
			limit = {
				vi_is_Disian_trigger = yes
			}
			add = {
				value = 10
				desc = court_position_disian
			}
		}
		if = {
			limit = {
				vi_is_Nosferatu_trigger = yes
			}
			add = {
				value = 10
				desc = court_position_nosferatu
			}
		}

		add = {
			value = martial
			multiply = 2
			desc = court_position_skill_martial
		}
		add = {
			value = stewardship
			desc = court_position_skill_stewardship
		}
		add = {
			value = intrigue
			desc = court_position_skill_intrigue
		}
		add = {
			value = prowess
			desc = court_position_skill_prowess
		}
		add = {
			value = 0
			add = court_position_vampire_insight_perks
			add = court_position_vampire_prowess_perks
			add = {
				value = court_position_vampire_people_perks
				multiply = 0.5
			}
			desc = court_position_vampire_perks
		}
		if = {
			limit = {
				has_trait = vi_allseeing
			}
			add = {
				value = 60
				desc = court_position_vi_allseeing_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_dragonsscion
			}
			add = {
				value = 40
				desc = court_position_vi_dragonsscion_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_heartstealer
			}
			add = {
				value = 20
				desc = court_position_vi_heartstealer_trait
			}
		}
		if = {
			limit = {
				has_trait = overseer
			}
			add = {
				value = 25
				desc = court_position_overseer_trait
			}
		}
		if = {
			limit = {
				has_trait = compassionate
			}
			add = {
				value = 20
				desc = court_position_compassionate_trait
			}
		}

		if = {
			limit = {
				has_trait = blind
			}
			add = {
				value = -50
				desc = court_position_blind_trait
			}
		}
		if = {
			limit = {
				has_trait = infirm
			}
			add = {
				value = -75
				desc = court_position_infirm_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_eunuch_tradition_value
		add = court_position_aptitude_family_business_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		always = no
		vi_is_vampire_trigger = yes
	}

	valid_position = {
		always = no
		highest_held_title_tier >= tier_duchy
	}

	is_shown_character = {
		scope:employee = {
			vi_is_vampire_trigger = yes
			is_courtier_of = scope:liege
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			liege ?= scope:liege # 
		}
	}

	revoke_cost = { # root is the liege, no other scopes are passed here!
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 via obligation hook
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = minor_court_position_salary # Update X_salary_tooltip if script_value is changed
			if = {
				limit = {
					scope:liege ?= {
						is_ai = yes
					}
				}
				multiply = 0.1
			}
			#You're working with LAAMPS now
			

			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = {
					value = 0
					desc = court_position_laamps_free
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	#is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints)
	scaling_employer_modifiers = {
		terrible = {
			stress_loss_mult = 0.05
		}
		poor = {
			legitimacy_gain_mult = 0.05
		}
		average = {
			legitimacy_gain_mult = 0.1
		}
		good = {
			legitimacy_gain_mult = 0.2
		}
		excellent = {
			legitimacy_gain_mult = 0.3
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 100
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_debt_considerations_value
	}

	sort_order = {
		value = 300
		if = {
			limit = {
				NOT = { employs_court_position = vi_template_position }
				any_courtier = {
					vi_is_vampire_trigger = yes
				}
			}
			add = 100
		}
	}
}

vi_herald_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = duchy # Should only be available for dukes and above
	skill = diplomacy

	opinion = {
		#value = regular_court_position_opinion
		value = 10
		if = {
			limit = {
				scope:liege = {
					has_government = vi_vampire_government
				}
			}
			add = {
				value = vi_courtier_opinion_value
				multiply = -1
			}
		}
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 40 80 120 200 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = court_position_aptitude_boon_voyager_trait
		add = court_position_vi_galvanize_perk
		add = court_position_vampire_tier
		
		if = {
			limit = {
				vi_is_Disian_trigger = yes
			}
			add = {
				value = 20
				desc = court_position_disian
			}
		}
		if = {
			limit = {
				vi_is_Nosferatu_trigger = yes
			}
			add = {
				value = -20
				desc = court_position_nosferatu
			}
		}
		add = {
			value = diplomacy
			multiply = 3
			desc = court_position_skill_diplomacy
		}
		add = {
			value = intrigue
			multiply = 0.5
			desc = court_position_skill_intrigue
		}
		add = {
			value = 0
			add = court_position_vampire_insight_perks
			multiply = 0.5
			add = court_position_vampire_people_perks
			desc = court_position_vampire_perks
		}
		if = {
			limit = {
				has_trait = vi_heartstealer
			}
			add = {
				value = 30
				desc = court_position_vi_heartstealer_trait
			}
		}
		if = {
			limit = {
				has_trait = diplomat
			}
			add = {
				value = 25
				desc = court_position_diplomat_trait
			}
		}
		if = {
			limit = {
				has_trait = august
			}
			add = {
				value = 25
				desc = court_position_august_trait
			}
		}
		if = {
			limit = {
				has_trait = family_first
			}
			add = {
				value = 10
				desc = court_position_family_first_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_allseeing
			}
			add = {
				value = 10
				desc = court_position_vi_allseeing_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_dragonsscion
			}
			add = {
				value = -20
				desc = court_position_vi_dragonsscion_trait
			}
		}
		if = {
			limit = {
				has_trait = gregarious
			}
			add = {
				value = 30
				desc = court_position_gregarious_trait
			}
		}
		if = {
			limit = {
				has_trait = generous
			}
			add = {
				value = 10
				desc = court_position_generous_trait
			}
		}
		if = {
			limit = {
				has_trait = shy
			}
			add = {
				value = -100
				desc = court_position_shy_trait
			}
		}
		if = {
			limit = {
				has_trait = infirm
			}
			add = {
				value = -75
				desc = court_position_infirm_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_eunuch_tradition_value
		add = court_position_aptitude_family_business_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	valid_position = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	is_shown_character = {
		scope:employee = {
			vi_is_vampire_trigger = yes
			is_courtier_of = scope:liege
			is_imprisoned = no
			#has_any_court_position = no
			NOR = {
				#has_court_position = vi_herald_court_position
				has_court_position = vi_sword_court_position
				has_court_position = vi_castellan_court_position
				has_court_position = vi_shadow_court_position
				has_court_position = vi_augur_court_position
			}
		}
	}

	valid_character = {
		scope:employee = {
			is_courtier_of = scope:liege
			
		}
	}

	revoke_cost = { # root is the liege, no other scopes are passed here!
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			multiply = 3
			# Set to 0 via obligation hook
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary # Update X_salary_tooltip if script_value is changed
			if = {
				limit = {
					scope:liege ?= {
						is_ai = yes
					}
				}
				multiply = 0.1
			}
			#You're working with LAAMPS now
			

			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = {
					value = 0
					desc = court_position_laamps_free
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	#is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints)
	scaling_employer_modifiers = {
		terrible = {
			negate_diplomacy_penalty_add = 2
		}
		poor = {
			diplomacy = 1
			owned_personal_scheme_success_chance_add = 5
			negate_diplomacy_penalty_add = 4
		}
		average = {
			diplomacy = 2
			monthly_diplomacy_lifestyle_xp_gain_mult = 0.1
			owned_personal_scheme_success_chance_add = 10
			negate_diplomacy_penalty_add = 6
		}
		good = {
			diplomacy = 4
			monthly_diplomacy_lifestyle_xp_gain_mult = 0.2
			owned_personal_scheme_success_chance_add = 15
			negate_diplomacy_penalty_add = 8
		}
		excellent = {
			diplomacy = 8
			monthly_diplomacy_lifestyle_xp_gain_mult = 0.4
			owned_personal_scheme_success_chance_add = 20
			negate_diplomacy_penalty_add = 10
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 100
		add = vi_relation_court_position_value
		#add = scope:base_value
		add = court_position_candidate_aptitude_value
		add = court_position_candidate_score_base_value
		#add = court_position_debt_considerations_value
		# if = {
        #     limit = {
        #         exists = scope:firing_court_position
        #     }
        #     scope:employee = {
        #         # Does the liege have a better candidate that they should be hiring instead?
        #         if = {
        #             limit = {
        #                 scope:highest_available_aptitude > scope:employee_aptitude
        #             }
        #             add = -200
        #         }
        #     }
        # }
	}

	sort_order = {
		value = 300
		if = {
			limit = {
				NOT = { employs_court_position = vi_herald_position }
				any_courtier = {
					vi_is_vampire_trigger = yes
				}
			}
			add = 200
		}
	}
}

vi_sword_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = duchy # Should only be available for dukes and above
	skill = martial

	opinion = {
		#value = regular_court_position_opinion
		value = 10
		if = {
			limit = {
				scope:liege = {
					has_government = vi_vampire_government
				}
			}
			add = {
				value = vi_courtier_opinion_value
				multiply = -1
			}
		}
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 40 80 120 200 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = court_position_aptitude_boon_voyager_trait
		add = court_position_vi_galvanize_perk
		add = court_position_vampire_tier
		
		if = {
			limit = {
				vi_is_Anunnaki_trigger = yes
			}
			add = {
				value = 10
				desc = court_position_anunnaki
			}
		}
		if = {
			limit = {
				vi_is_Nosferatu_trigger = yes
			}
			add = {
				value = 5
				desc = court_position_nosferatu
			}
		}
		add = {
			value = martial
			multiply = 3
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			multiply = 0.8
			desc = court_position_skill_prowess
		}
		add = {
			value = 0
			add = court_position_vampire_insight_perks
			add = court_position_vampire_prowess_perks
			desc = court_position_vampire_perks
		}
		if = {
			limit = {
				has_trait = vi_heartstealer
			}
			add = {
				value = 10
				desc = court_position_vi_heartstealer_trait
			}
		}
		if = {
			limit = {
				has_trait = gallant
			}
			add = {
				value = 25
				desc = court_position_gallant_trait
			}
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 25
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				has_trait = overseer
			}
			add = {
				value = 10
				desc = court_position_overseer_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_allseeing
			}
			add = {
				value = 10
				desc = court_position_vi_allseeing_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_dragonsscion
			}
			add = {
				value = 40
				desc = court_position_vi_dragonsscion_trait
			}
		}
		if = {
			limit = {
				has_trait = brave
			}
			add = {
				value = 20
				desc = court_position_brave_trait
			}
		}
		if = {
			limit = {
				has_trait = physique_good_1
			}
			add = {
				value = 10
				desc = court_position_physique_good_1_trait
			}
		}
		if = {
			limit = {
				has_trait = physique_good_2
			}
			add = {
				value = 25
				desc = court_position_physique_good_2_trait
			}
		}
		if = {
			limit = {
				has_trait = physique_good_3
			}
			add = {
				value = 40
				desc = court_position_physique_good_3_trait
			}
		}
		if = {
			limit = {
				has_trait = infirm
			}
			add = {
				value = -200
				desc = court_position_infirm_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_eunuch_tradition_value
		add = court_position_aptitude_family_business_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		vi_is_vampire_trigger = yes
		# NOT = {
		# 	is_landless_adventurer = yes
		# }
	}

	valid_position = {
		vi_is_vampire_trigger = yes
		# NOT = {
		# 	is_landless_adventurer = yes
		# }
	}

	is_shown_character = {
		scope:employee = {
			vi_is_vampire_trigger = yes
			is_courtier_of = scope:liege
			is_imprisoned = no
			#has_any_court_position = no
			NOR = {
				has_court_position = vi_herald_court_position
				#has_court_position = vi_sword_court_position
				has_court_position = vi_castellan_court_position
				has_court_position = vi_shadow_court_position
				has_court_position = vi_augur_court_position
			}
		}
	}

	valid_character = {
		scope:employee = {
			is_courtier_of = scope:liege 
		}
	}

	revoke_cost = { # root is the liege, no other scopes are passed here!
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			multiply = 3
			# Set to 0 via obligation hook
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary # Update X_salary_tooltip if script_value is changed
			if = {
				limit = {
					scope:liege ?= {
						is_ai = yes
					}
				}
				multiply = 0.1
			}
			#You're working with LAAMPS now
			

			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = {
					value = 0
					desc = court_position_laamps_free
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	#is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints)
	scaling_employer_modifiers = {
		terrible = {
			negate_martial_penalty_add = 2
		}
		poor = {
			martial = 1
			knight_effectiveness_mult = 0.25
			negate_martial_penalty_add = 4
		}
		average = {
			martial = 2
			monthly_martial_lifestyle_xp_gain_mult = 0.1
			knight_effectiveness_mult = 0.5
			negate_martial_penalty_add = 6
		}
		good = {
			martial = 4
			monthly_martial_lifestyle_xp_gain_mult = 0.2
			knight_effectiveness_mult = 0.75
			negate_martial_penalty_add = 8
		}
		excellent = {
			martial = 8
			monthly_martial_lifestyle_xp_gain_mult = 0.4
			knight_effectiveness_mult = 1
			negate_martial_penalty_add = 10
		}
	}

	modifier = {
		monthly_prestige = major_court_position_prestige_salary
		ai_boldness = 30
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 100
		add = vi_relation_court_position_value
		#add = scope:base_value
		add = court_position_candidate_aptitude_value
		add = court_position_candidate_score_base_value
		#add = court_position_debt_considerations_value
		# if = {
        #     limit = {
        #         exists = scope:firing_court_position
        #     }
        #     scope:employee = {
        #         # Does the liege have a better candidate that they should be hiring instead?
        #         if = {
        #             limit = {
        #                 scope:highest_available_aptitude > scope:employee_aptitude
        #             }
        #             add = -200
        #         }
        #     }
        # }
	}

	sort_order = {
		value = 300
		if = {
			limit = {
				NOT = { employs_court_position = vi_herald_position }
				any_courtier = {
					vi_is_vampire_trigger = yes
				}
			}
			add = 200
		}
	}
}

vi_castellan_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = duchy # Should only be available for dukes and above
	skill = stewardship

	opinion = {
		#value = regular_court_position_opinion
		value = 10
		if = {
			limit = {
				scope:liege = {
					has_government = vi_vampire_government
				}
			}
			add = {
				value = vi_courtier_opinion_value
				multiply = -1
			}
		}
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 40 80 120 200 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = court_position_aptitude_boon_voyager_trait
		add = court_position_vi_galvanize_perk
		add = court_position_vampire_tier
		
		if = {
			limit = {
				vi_is_Anunnaki_trigger = yes
			}
			add = {
				value = 30
				desc = court_position_anunnaki
			}
		}
		add = {
			value = stewardship
			multiply = 3
			desc = court_position_skill_stewardship
		}
		add = {
			value = diplomacy
			max = 25
			desc = court_position_skill_diplomacy
		}
		add = {
			value = martial
			max = 25
			desc = court_position_skill_martial
		}
		add = {
			value = intrigue
			max = 25
			desc = court_position_skill_intrigue
		}
		add = {
			value = learning
			max = 25
			desc = court_position_skill_learning
		}
		add = {
			value = 0
			add = court_position_vampire_insight_perks
			add = court_position_vampire_management_perks
			add = {
				value = court_position_vampire_people_perks
				multiply = 0.5
			}
			desc = court_position_vampire_perks
		}
		if = {
			limit = {
				has_trait = vi_heartstealer
			}
			add = {
				value = 10
				desc = court_position_vi_heartstealer_trait
			}
		}
		if = {
			limit = {
				has_trait = administrator
			}
			add = {
				value = 30
				desc = court_position_administrator_trait
			}
		}
		if = {
			limit = {
				has_trait = overseer
			}
			add = {
				value = 20
				desc = court_position_overseer_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_allseeing
			}
			add = {
				value = 50
				desc = court_position_vi_allseeing_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_dragonsscion
			}
			add = {
				value = 10
				desc = court_position_vi_dragonsscion_trait
			}
		}
		if = {
			limit = {
				has_trait = diligent
			}
			add = {
				value = 30
				desc = court_position_diligent_trait
			}
		}
		if = {
			limit = {
				has_trait = ambitious
			}
			add = {
				value = 20
				desc = court_position_ambitious_trait
			}
		}
		if = {
			limit = {
				has_trait = lazy
			}
			add = {
				value = -50
				desc = court_position_lazy_trait
			}
		}
		if = {
			limit = {
				has_trait = trusting
			}
			add = {
				value = -20
				desc = court_position_lazy_trait
			}
		}
		if = {
			limit = {
				has_trait = shy
			}
			add = {
				value = -20
				desc = court_position_shy_trait
			}
		}
		if = {
			limit = {
				has_trait = infirm
			}
			add = {
				value = -200
				desc = court_position_infirm_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_eunuch_tradition_value
		add = court_position_aptitude_family_business_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	valid_position = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	is_shown_character = {
		scope:employee = {
			vi_is_vampire_trigger = yes
			is_courtier_of = scope:liege
			is_imprisoned = no
			#has_any_court_position = no
			NOR = {
				has_court_position = vi_herald_court_position
				has_court_position = vi_sword_court_position
				#has_court_position = vi_castellan_court_position
				has_court_position = vi_shadow_court_position
				has_court_position = vi_augur_court_position
			}
		}
	}

	valid_character = {
		scope:employee = {
			is_courtier_of = scope:liege # 
		}
	}

	revoke_cost = { # root is the liege, no other scopes are passed here!
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			multiply = 3
			# Set to 0 via obligation hook
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = major_court_position_salary # Update X_salary_tooltip if script_value is changed
			if = {
				limit = {
					scope:liege ?= {
						is_ai = yes
					}
				}
				multiply = 0.1
			}
			#You're working with LAAMPS now
			

			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = {
					value = 0
					desc = court_position_laamps_free
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	#is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints)
	scaling_employer_modifiers = {
		terrible = {
			political_scheme_phase_duration_add = -10
			negate_stewardship_penalty_add = 2
		}
		poor = {
			stewardship = 1
			political_scheme_phase_duration_add = -10
			negate_stewardship_penalty_add = 4
		}
		average = {
			stewardship = 2
			political_scheme_phase_duration_add = -20
			owned_political_scheme_success_chance_add = 5
			negate_stewardship_penalty_add = 6
		}
		good = {
			stewardship = 4
			political_scheme_phase_duration_add = -30
			owned_political_scheme_success_chance_add = 10
			negate_stewardship_penalty_add = 8
		}
		excellent = {
			stewardship = 8
			political_scheme_phase_duration_add = -40
			owned_political_scheme_success_chance_add = 20
			negate_stewardship_penalty_add = 10
		}
	}

	modifier = {
		monthly_prestige = major_court_position_prestige_salary
		ai_rationality = 20
		ai_greed = 20
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 100
		add = vi_relation_court_position_value
		#add = scope:base_value
		add = court_position_candidate_aptitude_value
		add = court_position_candidate_score_base_value
		#add = court_position_debt_considerations_value
		# if = {
        #     limit = {
        #         exists = scope:firing_court_position
        #     }
        #     scope:employee = {
        #         # Does the liege have a better candidate that they should be hiring instead?
        #         if = {
        #             limit = {
        #                 scope:highest_available_aptitude > scope:employee_aptitude
        #             }
        #             add = -200
        #         }
        #     }
        # }
	}

	sort_order = {
		value = 300
		if = {
			limit = {
				NOT = { employs_court_position = vi_herald_position }
				any_courtier = {
					vi_is_vampire_trigger = yes
				}
			}
			add = 200
		}
	}
}

vi_shadow_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = duchy # Should only be available for dukes and above
	skill = intrigue

	opinion = {
		#value = regular_court_position_opinion
		value = 10
		if = {
			limit = {
				scope:liege = {
					has_government = vi_vampire_government
				}
			}
			add = {
				value = vi_courtier_opinion_value
				multiply = -1
			}
		}
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 40 80 120 200 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = court_position_aptitude_boon_voyager_trait
		add = court_position_vi_galvanize_perk
		add = court_position_vampire_tier
		
		if = {
			limit = {
				vi_is_Disian_trigger = yes
			}
			add = {
				value = 5
				desc = court_position_disian
			}
		}
		if = {
			limit = {
				vi_is_Nosferatu_trigger = yes
			}
			add = {
				value = 30
				desc = court_position_nosferatu
			}
		}
		add = {
			value = intrigue
			multiply = 3
			desc = court_position_skill_intrigue
		}
		add = {
			value = diplomacy
			max = 20
			desc = court_position_skill_diplomacy
		}
		add = {
			value = martial
			max = 20
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			multiply = 0.5
			max = 20
			desc = court_position_skill_prowess
		}
		add = {
			value = 0
			add = court_position_vampire_insight_perks
			add = {
				value = court_position_vampire_people_perks
				multiply = 0.5
			}
			add = {
				value = court_position_vampire_prowess_perks
				multiply = 0.5
			}
			desc = court_position_vampire_perks
		}
		if = {
			limit = {
				has_trait = vi_heartstealer
			}
			add = {
				value = 20
				desc = court_position_vi_heartstealer_trait
			}
		}
		if = {
			limit = {
				has_trait = schemer
			}
			add = {
				value = 40
				desc = court_position_schemer_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_allseeing
			}
			add = {
				value = 40
				desc = court_position_vi_allseeing_trait
			}
		}
		if = {
			limit = {
				has_trait = torturer
			}
			add = {
				value = 10
				desc = court_position_torturer_trait
			}
		}
		if = {
			limit = {
				has_trait = overseer
			}
			add = {
				value = 20
				desc = court_position_overseer_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_dragonsscion
			}
			add = {
				value = 10
				desc = court_position_vi_dragonsscion_trait
			}
		}
		if = {
			limit = {
				has_trait = diligent
			}
			add = {
				value = 30
				desc = court_position_diligent_trait
			}
		}
		if = {
			limit = {
				has_trait = callous
			}
			add = {
				value = 10
				desc = court_position_callous_trait
			}
		}
		if = {
			limit = {
				has_trait = deceitful
			}
			add = {
				value = 20
				desc = court_position_deceitful_trait
			}
		}
		if = {
			limit = {
				has_trait = lazy
			}
			add = {
				value = -40
				desc = court_position_lazy_trait
			}
		}
		if = {
			limit = {
				has_trait = trusting
			}
			add = {
				value = -75
				desc = court_position_trusting_trait
			}
		}
		if = {
			limit = {
				has_trait = infirm
			}
			add = {
				value = -75
				desc = court_position_infirm_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_eunuch_tradition_value
		add = court_position_aptitude_family_business_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	valid_position = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	is_shown_character = {
		scope:employee = {
			vi_is_vampire_trigger = yes
			is_courtier_of = scope:liege
			is_imprisoned = no
			#has_any_court_position = no
			NOR = {
				has_court_position = vi_herald_court_position
				has_court_position = vi_sword_court_position
				has_court_position = vi_castellan_court_position
				#has_court_position = vi_shadow_court_position
				has_court_position = vi_augur_court_position
			}
		}
	}

	valid_character = {
		scope:employee = {
			is_courtier_of = scope:liege # 
		}
	}

	revoke_cost = { # root is the liege, no other scopes are passed here!
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			multiply = 3
			# Set to 0 via obligation hook
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary # Update X_salary_tooltip if script_value is changed
			if = {
				limit = {
					scope:liege ?= {
						is_ai = yes
					}
				}
				multiply = 0.1
			}
			#You're working with LAAMPS now
			

			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = {
					value = 0
					desc = court_position_laamps_free
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints)
	scaling_employer_modifiers = {
		terrible = {
			negate_intrigue_penalty_add = 2
		}
		poor = {
			intrigue = 1
			enemy_hostile_scheme_success_chance_add = -5
			negate_intrigue_penalty_add = 4
		}
		average = {
			intrigue = 2
			enemy_hostile_scheme_success_chance_add = -10
			negate_intrigue_penalty_add = 6
		}
		good = {
			intrigue = 4
			enemy_hostile_scheme_success_chance_add = -15
			negate_intrigue_penalty_add = 8
		}
		excellent = {
			intrigue = 8
			enemy_hostile_scheme_success_chance_add = -20
			negate_intrigue_penalty_add = 10
		}
	}

	modifier = {
		monthly_prestige = major_court_position_prestige_salary
		ai_compassion = -10
		ai_boldness = 20
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 100
		add = vi_relation_court_position_value
		#add = scope:base_value
		add = court_position_candidate_aptitude_value
		add = court_position_candidate_score_base_value
		#add = court_position_debt_considerations_value
		if = {
            limit = {
                exists = scope:firing_court_position
            }
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -200
                }
            }
        }
	}

	sort_order = {
		value = 300
		if = {
			limit = {
				NOT = { employs_court_position = vi_shadow_position }
				any_courtier = {
					vi_is_vampire_trigger = yes
				}
			}
			add = 200
		}
	}
}

vi_augur_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = duchy # Should only be available for dukes and above
	skill = learning

	opinion = {
		#value = regular_court_position_opinion
		value = 10
		if = {
			limit = {
				scope:liege = {
					has_government = vi_vampire_government
				}
			}
			add = {
				value = vi_courtier_opinion_value
				multiply = -1
			}
		}
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 40 80 120 200 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = court_position_aptitude_boon_voyager_trait
		add = court_position_vi_galvanize_perk
		add = court_position_vampire_tier
		
		if = {
			limit = {
				vi_is_Anunnaki_trigger = yes
			}
			add = {
				value = 10
				desc = court_position_anunnaki
			}
		}
		if = {
			limit = {
				vi_is_Strix_trigger = yes
			}
			add = {
				value = 20
				desc = court_position_strix
			}
		}
		add = {
			value = learning
			multiply = 3
			desc = court_position_skill_learning
		}
		add = {
			value = diplomacy
			max = 15
			desc = court_position_skill_diplomacy
		}
		add = {
			value = martial
			max = 15
			desc = court_position_skill_martial
		}
		add = {
			value = intrigue
			max = 15
			desc = court_position_skill_intrigue
		}
		add = {
			value = stewardship
			max = 15
			desc = court_position_skill_stewardship
		}
		add = {
			value = 0
			add = {
				value = court_position_vampire_insight_perks
				multiply = 2
			}
			desc = court_position_vampire_perks
		}
		
		if = {
			limit = {
				has_trait = vi_allseeing
			}
			add = {
				value = 50
				desc = court_position_vi_allseeing_trait
			}
		}

		if = {
			limit = {
				has_trait = education_learning_5
			}
			add = {
				value = 50
				desc = education_learning
			}
		}

		if = {
			limit = {
				has_trait = lifestyle_mystic
				has_trait_xp = {
					trait = lifestyle_mystic
					value >= 100
				}
			}
			add = {
				value = 40
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = lifestyle_mystic
				has_trait_xp = {
					trait = lifestyle_mystic
					value >= 50
				}
			}
			add = {
				value = 20
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = {
				has_trait = lifestyle_mystic
			}
			add = {
				value = 10
				desc = court_position_mystic_1_trait
			}
		}

		if = {
			limit = {
				has_trait = lifestyle_herbalist
			}
			add = {
				value = 10
				desc = court_position_herbalist_trait
			}
		}

		if = {
			limit = {
				has_trait = hashishiyah
			}
			add = {
				value = 10
				desc = court_position_hashishiyah_trait
			}
		}

		if = {
			limit = {
				has_trait = intellect_good_3
			}
			add = {
				value = 15
				desc = court_position_intellect_good_3_trait
			}
		}
		if = {
			limit = {
				has_trait = witch
			}
			add = {
				value = 10
				desc = court_position_witch_trait
			}
		}
		if = {
			limit = {
				OR = {
					has_trait = possessed_1
					has_trait = possessed_genetic
				}
			}
			add = {
				value = 20
				desc = court_position_possessed_trait
			}
		}
		if = {
			limit = {
				has_trait = scholar
			}
			add = {
				value = 20
				desc = court_position_scholar_trait
			}
		}
		if = {
			limit = {
				has_trait = theologian
			}
			add = {
				value = 25
				desc = court_position_theologian_trait
			}
		}
		
		if = {
			limit = {
				has_trait = humble
			}
			add = {
				value = 20
				desc = court_position_humble_trait
			}
		}
		if = {
			limit = {
				has_trait = arrogant
			}
			add = {
				value = -20
				desc = court_position_arrogant_trait
			}
		}
		if = {
			limit = {
				has_trait = ambitious
			}
			add = {
				value = -20
				desc = court_position_ambitious_trait
			}
		}
		if = {
			limit = {
				has_trait = lazy
			}
			add = {
				value = -50
				desc = court_position_lazy_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_eunuch_tradition_value
		add = court_position_aptitude_family_business_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		vi_is_vampire_trigger = yes
	}

	valid_position = {
		vi_is_vampire_trigger = yes
	}

	is_shown_character = {
		scope:employee = {
			is_courtier_of = scope:liege
			is_imprisoned = no
			#has_any_court_position = no
			OR = {
				has_trait = lifestyle_mystic
				has_trait = vi_allseeing
				has_perk = vi_propheticdreams_perk
				has_trait = education_learning_5
				has_trait = witch
				has_trait = possessed_1
				has_trait = possessed_genetic
			}
			NOR = {
				has_court_position = vi_herald_court_position
				has_court_position = vi_sword_court_position
				has_court_position = vi_castellan_court_position
				has_court_position = vi_shadow_court_position
				#has_court_position = vi_augur_court_position
			}
		}
	}

	valid_character = {
		scope:employee = {
			is_courtier_of = scope:liege # 
		}
	}

	revoke_cost = { # root is the liege, no other scopes are passed here!
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			multiply = 3
			# Set to 0 via obligation hook
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary # Update X_salary_tooltip if script_value is changed
			if = {
				limit = {
					scope:liege ?= {
						is_ai = yes
					}
				}
				multiply = 0.1
			}
			#You're working with LAAMPS now
			

			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = {
					value = 0
					desc = court_position_laamps_free
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	#is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints)
	scaling_employer_modifiers = {
		terrible = {
			monthly_lifestyle_experience_mult = 0.05
			negate_learning_penalty_add = 2
		}
		poor = {
			stress_gain_mult = -0.05
			monthly_lifestyle_experience_mult = 0.05
			negate_learning_penalty_add = 4
		}
		average = {
			stress_gain_mult = -0.08
			monthly_lifestyle_experience_mult = 0.05
			negate_learning_penalty_add = 6
		}
		good = {
			learning = 1
			stress_gain_mult = -0.1
			monthly_lifestyle_experience_mult = 0.1
			negate_learning_penalty_add = 8
		}
		excellent = {
			learning = 2
			stress_gain_mult = -0.12
			monthly_lifestyle_experience_mult = 0.2
			negate_learning_penalty_add = 10
		}
	}

	modifier = {
		monthly_prestige = major_court_position_prestige_salary
		health = -0.25
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 100
		add = vi_relation_court_position_value
		#add = scope:base_value
		add = court_position_candidate_aptitude_value
		add = court_position_candidate_score_base_value
		# add = court_position_debt_considerations_value
		# if = {
        #     limit = {
        #         exists = scope:firing_court_position
        #     }
        #     scope:employee = {
        #         # Does the liege have a better candidate that they should be hiring instead?
        #         if = {
        #             limit = {
        #                 scope:highest_available_aptitude > scope:employee_aptitude
        #             }
        #             add = -500
        #         }
        #     }
        # }
	}

	sort_order = {
		value = 300
		if = {
			limit = {
				NOT = { employs_court_position = vi_augur_position }
				any_courtier = {
					vi_is_vampire_trigger = yes
				}
			}
			add = 200
		}
	}
}

vi_thrall_keeper_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = duchy # Should only be available for dukes and above
	skill = diplomacy

	opinion = {
		#value = regular_court_position_opinion
		value = 5
		if = {
			limit = {
				scope:liege = {
					has_government = vi_vampire_government
				}
			}
			add = {
				value = vi_courtier_opinion_value
				add = 15
				multiply = -1
			}
		}
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 40 80 120 160 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = court_position_aptitude_boon_voyager_trait
		add = court_position_vi_galvanize_perk
		add = court_position_vampire_tier

		if = {
			limit = {
				vi_is_Disian_trigger = yes
			}
			add = {
				value = 20
				desc = court_position_disian
			}
		}

		if = {
			limit = {
				vi_is_Nosferatu_trigger = yes
			}
			add = {
				value = 5
				desc = court_position_nosferatu
			}
		}
		
		add = {
			value = diplomacy
			multiply = 2.5
			desc = court_position_skill_diplomacy
		}
		add = {
			value = intrigue
			multiply = 1.5
			desc = court_position_skill_intrigue
		}
		add = {
			value = stewardship
			desc = court_position_skill_stewardship
		}
		add = {
			value = 0
			add = court_position_vampire_people_perks
			add = {
				value = court_position_vampire_insight_perks
				multiply = 0.5
			}
			desc = court_position_vampire_perks
		}

		if = {
			limit = {
				has_trait = vi_heartstealer
			}
			add = {
				value = 60
				desc = court_position_vi_heartstealer_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_dragonsscion
			}
			add = {
				value = 20
				desc = court_position_vi_dragonsscion_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_allseeing
			}
			add = {
				value = 30
				desc = court_position_vi_allseeing_trait
			}
		}
		if = {
			limit = {
				has_trait = compassionate
			}
			add = {
				value = 20
				desc = court_position_compassionate_trait
			}
		}
		if = {
			limit = {
				has_trait = sadistic
			}
			add = {
				value = -10
				desc = court_position_sadistic_trait
			}
		}
		if = {
			limit = {
				has_trait = blind
			}
			add = {
				value = -50
				desc = court_position_blind_trait
			}
		}
		if = {
			limit = {
				has_trait = infirm
			}
			add = {
				value = -75
				desc = court_position_infirm_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_eunuch_tradition_value
		add = court_position_aptitude_family_business_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	valid_position = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	is_shown_character = {
		scope:employee = {
			vi_is_vampire_trigger = yes
			is_courtier_of = scope:liege
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			is_courtier_of = scope:liege
		}
	}

	revoke_cost = { # root is the liege, no other scopes are passed here!
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 via obligation hook
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = minor_court_position_salary # Update X_salary_tooltip if script_value is changed
			if = {
				limit = {
					scope:liege ?= {
						is_ai = yes
					}
				}
				multiply = 0.1
			}
			#You're working with LAAMPS now
			

			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = {
					value = 0
					desc = court_position_laamps_free
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	#is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints)
	scaling_employer_modifiers = {
		terrible = {
			stress_loss_mult = 0.05
		}
		poor = {
			stress_loss_mult = 0.1
			legitimacy_gain_mult = 0.05
		}
		average = {
			stress_loss_mult = 0.15
			legitimacy_gain_mult = 0.1
		}
		good = {
			stress_gain_mult = -0.05
			stress_loss_mult = 0.2
			legitimacy_gain_mult = 0.2
		}
		excellent = {
			stress_gain_mult = -0.1
			stress_loss_mult = 0.25
			legitimacy_gain_mult = 0.3
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		owned_personal_scheme_success_chance_add = 10
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 100
		#add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_debt_considerations_value
	}

	sort_order = {
		value = 300
		if = {
			limit = {
				NOT = { employs_court_position = vi_thrall_keeper_position }
				any_courtier = {
					vi_is_vampire_trigger = yes
				}
			}
			add = 100
		}
	}
}

vi_sentinel_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = duchy # Should only be available for dukes and above
	skill = martial

	opinion = {
		#value = regular_court_position_opinion
		value = 10
		if = {
			limit = {
				scope:liege = {
					has_government = vi_vampire_government
				}
			}
			add = {
				value = vi_courtier_opinion_value
				multiply = -1
			}
		}
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 40 80 120 160 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = court_position_aptitude_boon_voyager_trait
		add = court_position_vi_galvanize_perk
		add = court_position_vampire_tier
		
		if = {
			limit = {
				vi_is_Anunnaki_trigger = yes
			}
			add = {
				value = 10
				desc = court_position_anunnaki
			}
		}
		if = {
			limit = {
				vi_is_Nosferatu_trigger = yes
			}
			add = {
				value = 10
				desc = court_position_nosferatu
			}
		}

		add = {
			value = martial
			multiply = 2
			desc = court_position_skill_martial
		}
		add = {
			value = stewardship
			desc = court_position_skill_stewardship
		}
		add = {
			value = intrigue
			desc = court_position_skill_intrigue
		}
		add = {
			value = prowess
			desc = court_position_skill_prowess
		}
		add = {
			value = 0
			add = court_position_vampire_insight_perks
			add = court_position_vampire_prowess_perks
			add = {
				value = court_position_vampire_people_perks
				multiply = 0.5
			}
			desc = court_position_vampire_perks
		}
		
		if = {
			limit = {
				has_trait = vi_allseeing
			}
			add = {
				value = 60
				desc = court_position_vi_allseeing_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_dragonsscion
			}
			add = {
				value = 50
				desc = court_position_vi_dragonsscion_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_heartstealer
			}
			add = {
				value = 25
				desc = court_position_vi_heartstealer_trait
			}
		}
		if = {
			limit = {
				has_trait = overseer
			}
			add = {
				value = 25
				desc = court_position_overseer_trait
			}
		}

		if = {
			limit = {
				has_trait = paranoid
			}
			add = {
				value = 20
				desc = court_position_paranoid_trait
			}
		}
		if = {
			limit = {
				has_trait = trusting
			}
			add = {
				value = -50
				desc = court_position_trusting_trait
			}
		}
		if = {
			limit = {
				has_trait = blind
			}
			add = {
				value = -50
				desc = court_position_blind_trait
			}
		}
		if = {
			limit = {
				has_trait = infirm
			}
			add = {
				value = -75
				desc = court_position_infirm_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_eunuch_tradition_value
		add = court_position_aptitude_family_business_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	valid_position = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	is_shown_character = {
		scope:employee = {
			vi_is_vampire_trigger = yes
			is_courtier_of = scope:liege
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			is_courtier_of = scope:liege
		}
	}

	revoke_cost = { # root is the liege, no other scopes are passed here!
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 via obligation hook
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = major_court_position_salary # Update X_salary_tooltip if script_value is changed
			if = {
				limit = {
					scope:liege ?= {
						is_ai = yes
					}
				}
				multiply = 0.1
			}
			#You're working with LAAMPS now
			

			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = {
					value = 0
					desc = court_position_laamps_free
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints)
	scaling_employer_modifiers = {
		terrible = {
			courtier_opinion = 5
			enemy_hostile_scheme_phase_duration_add = 5
		}
		poor = {
			courtier_opinion = 5
			enemy_hostile_scheme_phase_duration_add = 10
			legitimacy_gain_mult = 0.05
		}
		average = {
			courtier_opinion = 10
			dread_baseline_add = 5
			enemy_hostile_scheme_phase_duration_add = 20
			enemy_hostile_scheme_success_chance_add = -5
			legitimacy_gain_mult = 0.1
		}
		good = {
			courtier_opinion = 15
			dread_baseline_add = 5
			enemy_hostile_scheme_phase_duration_add = 30
			enemy_hostile_scheme_success_chance_add = -10
			legitimacy_gain_mult = 0.2
		}
		excellent = {
			courtier_opinion = 20
			dread_baseline_add = 10
			enemy_hostile_scheme_phase_duration_add = 30
			enemy_hostile_scheme_success_chance_add = -20
			legitimacy_gain_mult = 0.3
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		owned_hostile_scheme_success_chance_add = 20
		ai_boldness = 20
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 100
		#add = scope:base_value
		add = court_position_candidate_aptitude_value
		add = court_position_candidate_score_base_value
		add = court_position_debt_considerations_value
	}

	sort_order = {
		value = 300
		if = {
			limit = {
				NOT = { employs_court_position = vi_sentinel_position }
				any_courtier = {
					vi_is_vampire_trigger = yes
				}
			}
			add = 100
		}
	}
}

vi_hound_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = duchy # Should only be available for dukes and above
	skill = intrigue

	opinion = {
		#value = regular_court_position_opinion
		value = 10
		if = {
			limit = {
				scope:liege = {
					has_government = vi_vampire_government
				}
			}
			add = {
				value = vi_courtier_opinion_value
				multiply = -1
			}
		}
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 40 80 120 160 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = court_position_aptitude_boon_voyager_trait
		add = court_position_vi_galvanize_perk
		add = court_position_vampire_tier
		
		if = {
			limit = {
				vi_is_Anunnaki_trigger = yes
			}
			add = {
				value = 5
				desc = court_position_anunnaki
			}
		}
		if = {
			limit = {
				vi_is_Nosferatu_trigger = yes
			}
			add = {
				value = 30
				desc = court_position_nosferatu
			}
		}

		add = {
			value = martial
			multiply = 2
			desc = court_position_skill_martial
		}
		add = {
			value = intrigue
			multiply = 2
			desc = court_position_skill_intrigue
		}
		add = {
			value = prowess
			multiply = 1.5
			desc = court_position_skill_prowess
		}
		add = {
			value = 0
			add = court_position_vampire_insight_perks
			add = {
				value = court_position_vampire_prowess_perks
				multiply = 1.5
			}
			desc = court_position_vampire_perks
		}
		
		if = {
			limit = {
				has_trait = vi_allseeing
			}
			add = {
				value = 50
				desc = court_position_vi_allseeing_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_dragonsscion
			}
			add = {
				value = 50
				desc = court_position_vi_dragonsscion_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_heartstealer
			}
			add = {
				value = 30
				desc = court_position_vi_heartstealer_trait
			}
		}

		if = {
			limit = {
				has_trait = callous
			}
			add = {
				value = 20
				desc = court_position_callous_trait
			}
		}
		if = {
			limit = {
				has_trait = sadistic
			}
			add = {
				value = 20
				desc = court_position_sadistic_trait
			}
		}
		if = {
			limit = {
				has_trait = vengeful
			}
			add = {
				value = 20
				desc = court_position_vengeful_trait
			}
		}
		if = {
			limit = {
				has_trait = forgiving
			}
			add = {
				value = -20
				desc = court_position_forgiving_trait
			}
		}
		if = {
			limit = {
				has_trait = compassionate
			}
			add = {
				value = -50
				desc = court_position_compassionate_trait
			}
		}
		if = {
			limit = {
				has_trait = trusting
			}
			add = {
				value = -50
				desc = court_position_trusting_trait
			}
		}

		if = {
			limit = {
				has_trait = blind
			}
			add = {
				value = -50
				desc = court_position_blind_trait
			}
		}
		if = {
			limit = {
				has_trait = infirm
			}
			add = {
				value = -75
				desc = court_position_infirm_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_eunuch_tradition_value
		add = court_position_aptitude_family_business_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	valid_position = {
		vi_is_vampire_trigger = yes
		NOT = {
			is_landless_adventurer = yes
		}
	}

	is_shown_character = {
		scope:employee = {
			vi_is_vampire_trigger = yes
			is_courtier_of = scope:liege
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			is_courtier_of = scope:liege
		}
	}

	revoke_cost = { # root is the liege, no other scopes are passed here!
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 via obligation hook
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = minor_court_position_salary # Update X_salary_tooltip if script_value is changed
			if = {
				limit = {
					scope:liege ?= {
						is_ai = yes
					}
				}
				multiply = 0.1
			}
			#You're working with LAAMPS now
			

			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = {
					value = 0
					desc = court_position_laamps_free
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints)
	scaling_employer_modifiers = {
		terrible = {
			owned_hostile_scheme_phase_duration_add = -5
		}
		poor = {
			dread_baseline_add = 5
			owned_hostile_scheme_phase_duration_add = -10
		}
		average = {
			dread_baseline_add = 10
			owned_hostile_scheme_phase_duration_add = -15
		}
		good = {
			dread_baseline_add = 15
			owned_hostile_scheme_phase_duration_add = -25
		}
		excellent = {
			dread_baseline_add = 20
			owned_hostile_scheme_success_chance_add = 10
			owned_hostile_scheme_phase_duration_add = -40
			legitimacy_gain_mult = 0.1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		dread_baseline_add = 20
		owned_hostile_scheme_phase_duration_add = -10
		owned_hostile_scheme_success_chance_add = 10
		prowess_no_portrait = 3
		ai_boldness = 20
		ai_compassion = -20
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 100
		#add = scope:base_value
		add = court_position_candidate_aptitude_value
		add = court_position_candidate_score_base_value
		add = court_position_debt_considerations_value
	}

	sort_order = {
		value = 300
		if = {
			limit = {
				NOT = { employs_court_position = vi_hound_position }
				any_courtier = {
					vi_is_vampire_trigger = yes
				}
			}
			add = 100
		}
	}
}

vi_merchant_liaison_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = duchy # Should only be available for dukes and above
	skill = diplomacy

	opinion = {
		#value = regular_court_position_opinion
		value = 10
		if = {
			limit = {
				scope:liege = {
					has_government = vi_vampire_government
				}
			}
			add = {
				value = vi_courtier_opinion_value
				multiply = -1
			}
		}
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 40 80 120 160 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = court_position_aptitude_boon_voyager_trait
		add = court_position_vi_galvanize_perk
		
		if = {
			limit = {
				vi_is_Anunnaki_trigger = yes
			}
			add = {
				value = 10
				desc = court_position_anunnaki
			}
		}
		if = {
			limit = {
				vi_is_Disian_trigger = yes
			}
			add = {
				value = 20
				desc = court_position_disian
			}
		}

		add = {
			value = diplomacy
			multiply = 2
			desc = court_position_skill_diplomacy
		}
		add = {
			value = stewardship
			multiply = 1.5
			desc = court_position_skill_stewardship
		}
		add = {
			value = intrigue
			desc = court_position_skill_intrigue
		}
		add = {
			value = 0
			add = court_position_vampire_insight_perks
			add = court_position_vampire_people_perks
			add = court_position_vampire_management_perks
			desc = court_position_vampire_perks
		}
		
		if = {
			limit = {
				has_trait = vi_allseeing
			}
			add = {
				value = 60
				desc = court_position_vi_allseeing_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_dragonsscion
			}
			add = {
				value = 10
				desc = court_position_vi_dragonsscion_trait
			}
		}
		if = {
			limit = {
				has_trait = vi_heartstealer
			}
			add = {
				value = 40
				desc = court_position_vi_heartstealer_trait
			}
		}

		if = {
			limit = {
				has_trait = diplomat
			}
			add = {
				value = 50
				desc = court_position_diplomat_trait
			}
		}
		if = {
			limit = {
				has_trait = generous
			}
			add = {
				value = -20
				desc = court_position_generous_trait
			}
		}
		if = {
			limit = {
				has_trait = blind
			}
			add = {
				value = -50
				desc = court_position_blind_trait
			}
		}
		if = {
			limit = {
				has_trait = infirm
			}
			add = {
				value = -75
				desc = court_position_infirm_trait
			}
		}
		add = court_position_aptitude_traveling_friends_value
		add = court_position_aptitude_eunuch_tradition_value
		add = court_position_aptitude_family_business_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_government = vi_vampire_government
		domicile ?= {
			OR = {
				has_domicile_parameter = vi_unlock_merchant_liaison
			}
		}
	}

	valid_position = {
		has_government = vi_vampire_government
		domicile ?= {
			OR = {
				has_domicile_parameter = vi_unlock_merchant_liaison
			}
		}
	}

	is_shown_character = {
		scope:employee = {
			vi_is_vampire_trigger = yes
			is_courtier_of = scope:liege
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			is_courtier_of = scope:liege
		}
	}

	revoke_cost = { # root is the liege, no other scopes are passed here!
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 via obligation hook
			# Avoid AI prestige issues
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
			# Special case for events
			if = {
				limit = {
					exists = this
					has_character_flag = free_revoke_cost
				}
				multiply = 0
			}
			#Lowering for LAAMPS, to match Camp Officer revoke cost
			if = {
				limit = { 
					exists = this
					is_landless_adventurer = yes
				}
				value = minor_court_position_prestige_revoke_cost
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary # Update X_salary_tooltip if script_value is changed
			if = {
				limit = {
					scope:liege ?= {
						is_ai = yes
					}
				}
				multiply = 0.1
			}
			#You're working with LAAMPS now
			

			if = {
				limit = { 
					scope:liege ?= { is_landless_adventurer = yes }
				}
				multiply = {
					value = 0
					desc = court_position_laamps_free
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	#is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints)
	scaling_employer_modifiers = {
		terrible = {
			domicile_monthly_gold_mult = 0.05
		}
		poor = {
			domicile_monthly_gold_mult = 0.15
		}
		average = {
			domicile_monthly_gold_mult = 0.25
		}
		good = {
			domicile_monthly_gold_mult = 0.4
		}
		excellent = {
			domicile_monthly_gold_mult = 0.5
			monthly_gold_mult = 0.02
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		owned_hostile_scheme_success_chance_add = 10
		stewardship = 1
		ai_greed = 20
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 100
		#add = scope:base_value
		add = court_position_candidate_aptitude_value
		add = court_position_candidate_score_base_value
		add = court_position_debt_considerations_value
	}

	sort_order = {
		value = 300
		if = {
			limit = {
				NOT = { employs_court_position = vi_nerchant_liaison_position }
				any_courtier = {
					vi_is_vampire_trigger = yes
				}
			}
			add = 100
		}
	}
}