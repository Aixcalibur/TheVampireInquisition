vi_investigate = {
	# Basic Setup
	skill = intrigue
	desc = vi_investigate_desc_general
	success_desc = "VI_INVESTIGATE_SUCCESS_DESC"
	icon = icon_scheme_challenge_status
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = hostile
	is_secret = yes
	maximum_breaches = 10
	is_basic = yes

	# Parameters
	speed_per_skill_point = -2
	speed_per_target_skill_point = 1
	spymaster_speed_per_skill_point = -2
	base_progress_goal = 365
	base_maximum_success = 95
	minimum_success = 5
	maximum_secrecy = 80
	minimum_secrecy = 40
	
	# Core Triggers
	allow = {
		NOT = {
			vi_is_vampire_trigger = yes
		}
		custom_tooltip = {
			text = vi_investigate_soothed_tt
			NOT = {
				has_character_modifier = vi_soothed_modifier
			}
		}
		
		scope:target = {
			vi_is_vampire_trigger = yes
			NOT = {
				has_trait = vi_exposed_vampire
			}
		}
	}

	valid = {
		# You're too far away
		scope:target = {
			OR = {
				exists = location
				in_diplomatic_range = scope:owner
			}
		}
		scope:target = {
			NOT = {
				has_trait = vi_exposed_vampire
			}
		}
		scope:owner = {
			NOT = {
				has_character_modifier = vi_soothed_modifier
			}
		}
	}

	use_secrecy = {
		always = yes
	}

	odds_prediction = {
		add = base_odds_prediction_target_is_char_value
		add = odds_skill_contribution_intrigue_value
		min = 0
	}

	# Base Chances
	base_success_chance = {
		base = 25
		#hostile_scheme_base_chance_modifier = yes
		scheme_type_skill_success_chance_modifier = { SKILL = LEARNING }
		modifier = {
			add = {
				value = scope:owner.intrigue
				multiply = 2
			}
			desc = SCHEME_YOUR_INTRIGUE
		}
		modifier = {
			desc = "VI_VAMPIRE_HUNTER_SKILL"
			scope:owner = {
				has_trait = vi_inquisitor
			}
			add = {
				value = 10
				if = {
					limit = {
						scope:owner = {
							has_trait_xp = { trait = vi_inquisitor value >= 25 }
						}
					}
					add = 10
				}
				if = {
					limit = {
						scope:owner = {
							has_trait_xp = { trait = vi_inquisitor value >= 50 }
						}
					}
					add = 10
				}
				if = {
					limit = {
						scope:owner = {
							has_trait_xp = { trait = vi_inquisitor value >= 75 }
						}
					}
					add = 10
				}
				if = {
					limit = {
						scope:owner = {
							has_trait_xp = { trait = vi_inquisitor value >= 100 }
						}
					}
					add = 10
				}
			}
		}

		modifier = {
			desc = "SCHEME_TARGET_IS_LANDED"
			scope:target = {
				is_landed = yes
			}
			add = 20
		}
		modifier = {
			desc = "SCHEME_TARGET_IS_A_KING"
			scope:target = {
				is_landed = yes
				highest_held_title_tier = tier_kingdom
			}
			add = 20
		}
		modifier = {
			desc = "SCHEME_TARGET_IS_AN_EMPEROR"
			scope:target = {
				is_landed = yes
				highest_held_title_tier = tier_empire
			}
			add = 40
		}
		modifier = {
			desc = "VI_SCHEME_TARGET_REALM_SIZE"
			scope:target = {
				is_landed = yes
			}
			add = {
				value = scope:target.sub_realm_size
				max = 100
			}
		}

		modifier = {
			desc = "SCHEME_TARGET_LEGITIMACY"
			scope:target = {
				has_legitimacy = yes
			}
			add = {
				value = 50
				add = {
					value = -20
					multiply = scope:target.legitimacy_level
				}
			}
		}
		
		# Target's intrigue
		modifier = {
			desc = "INTRIGUE_SKILL_REASON"
			add = {
				value = scope:target.intrigue
				multiply = -2
				#min = -50
			}
		}
		
		# Target's traits
		modifier = { # Target is paranoid, therefore leaves few clues
			scope:target = { has_trait = paranoid }
			desc = "SCHEME_TARGET_IS_PARANOID"
			add = -50
		}
	}
	base_secrecy = {
		add = 30
		add = secrecy_base_value
		add = countermeasure_apply_secrecy_maluses_value
	}
	# On Actions
	on_start = {
		# set_variable = {
		# 	name = apply_countermeasures
		# 	value = flag:indirect
		# }
	}

	on_phase_completed = {
		# Grab our scopes.
		save_scope_as = scheme
		scheme_target_character = { save_scope_as = target }
		scheme_owner = { save_scope_as = owner }
		scope:scheme = {
			scheme_owner = {
				# DISCOVERY ROLL
				save_scope_value_as = {
					name = discovery_chance
					value = {
						value = 100
						subtract = scope:scheme.scheme_secrecy
					}
				}
				random = {
					chance = scope:discovery_chance
					save_scope_value_as = {
						name = scheme_discovered
						value = yes
					}
				}
				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}
				if = {
					limit = { exists = scope:scheme_successful }
					trigger_event = vi_investigate_secrets.001 #Success event
				}
				else = {
					trigger_event = vi_investigate_secrets.002
				}
			}
		}
	}

	on_monthly = {
		save_scope_as = scheme
		scheme_owner = { save_scope_as = owner }
		scheme_target_character = { save_scope_as = target }

		hostile_scheme_monthly_discovery_chance_effect = yes
	}

	on_invalidated = {
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		#Do Stuff
	}
}
