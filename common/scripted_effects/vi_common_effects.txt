vi_make_vampire_effect = {

	add_character_flag = immune_to_disease
	add_character_flag = vi_vampire
	hidden_effect = {
		remove_character_modifier = vi_drained_modifier
	}
	
	add_secret = {
		type = secret_vi_vampire
	}

	add_character_modifier = vi_unnatural_youth_modifier

	# Make it so vampires don't get the vanilla stress events any more
	# EDIT: Actually, we'll just place this on the stress_on_action
	# add_character_flag = stress_threshold_event_3_cooldown
	# add_character_flag = stress_threshold_event_2_cooldown
	# add_character_flag = stress_threshold_event_1_cooldown

	# set_sexuality = asexual
}

vi_recenter_domicile_effect = {
	
	# random_held_title = {
	# 	limit = {
	# 		tier = highest_held_title_tier
	# 		is_noble_family_title = no
	# 	}
	# 	save_scope_as = destination
	# }

	primary_title.title_capital_county.title_province = {
		save_scope_as = destination
	}

	domicile ?= {
		move_domicile = scope:destination
	}

}

vi_upgrade_vampire_effect = {
	if = {
		limit = {
			has_trait = vi_vampire_1
		}
		add_trait = vi_vampire_2
		remove_trait = vi_vampire_1
	}
	else_if = {
		limit = {
			has_trait = vi_vampire_2
		}
		add_trait = vi_vampire_3
		remove_trait = vi_vampire_2
	}
	else_if = {
		limit = {
			has_trait = vi_vampire_3
		}
		add_trait = vi_vampire_4
		remove_trait = vi_vampire_3
	}
}

vi_turn_into_vampire_effect = {

	# $VI_VAMPIRE$ = {
	# 	save_scope_as = vi_vampire
	# }
	# $VI_TARGET$ = {
	# 	save_scope_as = vi_target
	# }

	scope:vi_target = {
		if = {
			limit = {
				vi_is_vampire_trigger = no
			}

			hidden_effect = {
				every_close_or_extended_family_member = {
					limit = {
						vi_is_vampire_trigger = no
					}
					add_opinion = {
						target = scope:vi_target
						modifier = suspicion_opinion
						value = -10
					}
				}
			}

			#Depose Rulers
			# if = {
			# 	limit = {
			# 		is_ruler = yes
			# 	}
			# 	add_character_flag = {
			# 		flag = abdicated_from_throne
			# 		days = 30
			# 	}
			# 	hidden_effect = {	#Make all weak claims on your titles into strong claims.
			# 		every_held_title = {
			# 			save_temporary_scope_as = abdicator_title
			# 			every_claimant = {
			# 				limit = { has_weak_claim_on = scope:abdicator_title }
			# 				make_claim_strong = scope:abdicator_title
			# 			}
			# 		}
			# 	}
			# 	depose = yes
			# }

			# add_trait = vi_vampire_1
			vi_make_vampire_effect = yes

			add_character_modifier = {
				modifier = vi_skittish_modifier
				years = 20
			}

			set_immortal_age = scope:vi_target.age

			scope:vi_vampire = {
				adopt = scope:vi_target
			}
			set_character_faith = scope:vi_vampire.faith
			# set_house = scope:vi_vampire.house
		}
	}
}

vi_become_dormant_effect = {
	add_trait = vi_dormant

	if = {
		limit = {
			is_ruler = yes
		}

		add_character_flag = {
			flag = abdicated_from_throne
			days = 30
		}
		hidden_effect = {	#Make all weak claims on your titles into strong claims.
			every_held_title = {
				save_temporary_scope_as = abdicator_title
				every_claimant = {
					limit = { has_weak_claim_on = scope:abdicator_title }
					make_claim_strong = scope:abdicator_title
				}
			}
		}
		depose = yes
	}

	if = {
		limit = {
			has_trait = vi_exposed_vampire
		}
		remove_trait = vi_exposed_vampire
		add_secret = {
			type = secret_vi_vampire
			target = THIS
		}
	}

	every_scheme = {
		end_scheme = yes
	}
	
	every_targeting_scheme = {
		end_scheme = yes
	}
}


vi_add_stacking_modifier_effect = {
	if = {
		limit = { 
			$LEVEL$ > 0
		}
		save_scope_value_as = {
			name = modifier
			value = flag:$MODIFIER$
		}
		save_scope_value_as = {
			name = level
			value = $LEVEL$
		}
		save_scope_value_as = {
			name = years
			value = $YEARS$
		}
		hidden_effect = {
			set_local_variable = {
				name = for_counter
				value = 0
			}
			while = {
				limit = {
					exists = local_var:for_counter
					exists = scope:level
					scope:level > local_var:for_counter
				}
				if = {
					limit = { $YEARS$ > 0 }
					add_$TYPE$_modifier = { modifier = $MODIFIER$ years = $YEARS$ }
				}
				else = {
					add_$TYPE$_modifier = $MODIFIER$
				}
				change_local_variable = {
					name = for_counter
					add = 1
				}
			}
		}
	}
}

vi_secret_exposed_vampire_effect = {
	add_trait = vi_exposed_vampire
	#save_scope_as = vi_exposed_vampire
	liege ?= {
		if = {
			limit = {
				has_government = vi_vampire_government
			}
			send_interface_message = {
				type = send_interface_message_bad
				title = vi_vampire_exposed_msg
				desc = vi_vampire_exposed_msg_desc
				#tooltip = LOCALIZATION # optional, otherwise takes it from the message type
				left_icon = root # optional, character, artifact, or title
				#right_icon = scope:domicile_location # optional, character, artifact, or title
				goto = root # optional, character, barony title, province will add a goto button
				
				add_legitimacy = medium_legitimacy_loss
			}
			
		}	
	}
}