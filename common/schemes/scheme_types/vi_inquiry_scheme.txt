vi_inquiry_scheme = {
	# Basic Setup
	skill = diplomacy
	desc = vi_inquiry_scheme_desc_general
	success_desc = vi_inquiry_scheme_desc_success
	icon = diplomacy
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = title
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = 0
	phases_per_agent_charge = 1
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		always = yes
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_basic_suite_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = DIPLOMACY }
		scheme_type_skill_success_chance_modifier = { SKILL = INTRIGUE }
		
		#laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_start = {
		if = {
			limit = {
				scheme_owner = {
					NOT = { has_variable = agents_added }
				}
			}
			# Success.
			add_agent_slot = agent_vi_leader
			add_agent_slot = agent_scout
			add_agent_slot = agent_bailiff
			# Speed.
			add_agent_slot = agent_tracker
			add_agent_slot = agent_footpad
		}
		# Try to guarantee an event in the first six months.
		# scheme_owner = {
		# 	trigger_event = {
		# 		on_action = laamp_base_0001_contract_scheme_on_going_events
		# 		months = { 1 3 }
		# 	}
		# }
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		vi_peasant_disappearances_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { vi_peasant_disappearances_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			vi_peasant_disappearances_scheme_prep_effect = yes
		}
	}
	on_monthly = {
		#fire_generic_contract_scheme_on_going_events_effect = yes
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}