vi_sponsor_claimant_start_war_effect = {
	#Give the adventurer a dynamic title to tide them over.
	create_dynamic_title = {
		tier = duchy
		name = {
			first_valid = {
				triggered_desc = {
					trigger = {
						faith = { has_doctrine = doctrine_gender_male_dominated }
					}
					desc = VIKING_ARMY_MEN_NAME
				}
				triggered_desc = {
					trigger = {
						faith = { has_doctrine = doctrine_gender_female_dominated }
					}
					desc = VIKING_ARMY_WOMEN_NAME
				}
				triggered_desc = {
					trigger = {
						faith = { has_doctrine = doctrine_gender_equal }
					}
					desc = VIKING_ARMY_NEUTRAL_NAME
				}
				#Fallback, just in case.
				desc = VIKING_ARMY_NEUTRAL_NAME
			}
		}
		adj = VIKING_ARMY_adj
	}
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:new_title = {
		set_capital_county = scope:adventurer_target
		set_landless_title = yes
		set_destroy_on_gain_same_tier = yes
		set_no_automatic_claims = yes
		set_can_be_named_after_dynasty = no
		change_title_holder = {
			holder = scope:scandi_adventurer
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	scope:new_title = {
		generate_coa = yes
		set_variable = {
			name = temporary_title
			value = yes
		}
	}
	#Declare the war.
	scope:scandi_adventurer = {
		start_war = {
			casus_belli = fp1_scandi_adventurer_conquest
			target = scope:adventurer_target.holder.top_liege
			target_title = scope:adventurer_target.duchy
		}
	}
	# Setup event troops.
	scope:scandi_adventurer = {
		# Set a random spawn location.
		## Try to pick a good spot in Scandinavia.
		if = {
			limit = {
				any_county_in_region = {
					region = world_europe_north
					valid_scandinavian_county_for_embark_trigger = yes
				}
			}
			random_county_in_region = {
				region = world_europe_north
				limit = { valid_scandinavian_county_for_embark_trigger = yes }
				# Weight up according to development, so armies tend to spawn in places where more randos would congregate.
				weight = {
					modifier = {
						add = {
							value = development_level
							multiply = 10
						}
					}
				}
				save_temporary_scope_as = selected_county
				scope:scandi_adventurer = {
					set_variable = {
						name = random_location
						value = scope:selected_county.title_province
						days = 365
					}
				}
			}
		}
		## Otherwise, we used our backup of Lister, the last Scandinavian province left alive, three million miles into deep space.
		else = {
			set_variable = {
				name = random_location
				value = title:b_lister.title_province
				days = 365
			}
		}
		# Work out how many event troops we should give the adventurer for a 60:40 fight.
		spawn_army = {
			levies = {
				add = {
					#Base of 400.
					add = scope:adventurer_target.holder.top_liege.max_military_strength
					#Multiply that by the realm size of the target's top_liege.
					multiply = 1.5
					#Account for allies, adding more without just nullifying them.
					scope:adventurer_target.holder.top_liege = {
						every_ally = { add = this.max_military_strength }
					}
					#Cut it off so things don't get too ridiculous.
					max = 8000
					#Make sure all adventurers have a moderately respectable force.
					min = 1000
				}
			}
			inheritable = no
			location = scope:scandi_adventurer.var:random_location
			name = scandi_adventurer_event_troops
		}
		spawn_army = {
			men_at_arms = {
				type = huscarl
				stacks = {
					value = 1
					multiply = scope:adventurer_target.holder.top_liege.primary_title.tier
				}
			}
			inheritable = yes
			location = scope:scandi_adventurer.var:random_location
			name = scandi_adventurer_event_troops
		}
		spawn_army = {
			men_at_arms = {
				type = light_footmen
				stacks = {
					value = 1
					multiply = scope:adventurer_target.holder.top_liege.primary_title.tier
				}
			}
			inheritable = yes
			location = scope:scandi_adventurer.var:random_location
			name = scandi_adventurer_event_troops
		}
		# Suppress startup error false-positive
		if = {
			limit = { has_variable = random_location }
			# Do nothing.
		}
	}
	# Loan a little gold in case they're in debt/to keep them going.
	scope:scandi_adventurer = { add_gold = scandinavian_adventurer_efficacy_loan_value }
}