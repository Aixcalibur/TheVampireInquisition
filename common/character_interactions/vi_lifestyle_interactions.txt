vi_compel_suicide_interaction = {
	category = interaction_category_hostile
	icon = icon_dead
	desc = vi_compel_suicide_interaction_desc

	ai_maybe = yes
	can_send_despite_rejection = yes
	on_decline_summary = vi_compel_suicide_decline_summary

	cooldown_against_recipient = {
		years = 1
	}

	ai_targets = {
		ai_recipients = scripted_relations
		max = 10
	}

	ai_frequency = 60
	
	is_shown = {
		NOT = {
			scope:actor = scope:recipient
		}
		scope:actor = {
			vi_is_vampire_trigger = yes
			is_ruler = yes
			has_trait_with_flag = vi_can_steal_hearts
		}
	}

	is_valid_showing_failures_only = {
		trigger_if = {
			limit = {
				scope:recipient = {
					OR = {
						vi_is_vampire_trigger = yes
						has_trait = vi_dhampir
					}
				}
				scope:actor = {
					NOT = {
						has_perk = vi_presence_perk
					}
				}
			}
			custom_tooltip = {
				text = vi_need_presence_tt
				always = no
			}
		}

		scope:recipient = {
			NOT = {
				has_trait = vi_heartstealer
			}
		}

		scope:recipient = {
			NOT = {
				vi_has_holy_artifact_equipped_trigger = yes
			}
		}
	}

	cost = {
		piety = 100
	}

	on_send = {
		scope:actor = {
			add_character_modifier = {
				modifier = vi_vampire_strain_modifier
				years = 10
			}
			add_character_modifier = {
				modifier = vi_vampire_strain_modifier
				years = 10
			}
		}
	}

	on_accept = {
		scope:actor = {
			show_as_tooltip = {
				add_character_modifier = {
					modifier = vi_vampire_strain_modifier
					years = 10
				}
				add_character_modifier = {
					modifier = vi_vampire_strain_modifier
					years = 10
				}
			}

			stress_impact = {
				base = medium_stress_impact_gain
				compassionate = minor_stress_impact_gain
				forgiving = miniscule_stress_impact_gain
				sadistic = minor_stress_impact_loss
			}
		}
		scope:recipient = {
			add_character_modifier = {
				modifier = vi_sirenscall_modifier
				years = 5
			}
			
			hidden_effect = {
				committed_suicide_effect = yes
			}
		}
		scope:actor = {
			send_interface_toast = {
				type = event_toast_effect_good
				title = vi_siren_call_accepted
				right_icon = scope:recipient

				scope:recipient = {
					show_as_tooltip = {
						committed_suicide_effect = yes
					}
				}
			}
		}
	}
	on_decline = {
		scope:actor = {
			show_as_tooltip = {
				add_character_modifier = {
					modifier = vi_vampire_strain_modifier
					years = 10
				}
				add_character_modifier = {
					modifier = vi_vampire_strain_modifier
					years = 10
				}
			}
			stress_impact = {
				base = medium_stress_impact_gain
				compassionate = minor_stress_impact_gain
				forgiving = miniscule_stress_impact_gain
				sadistic = minor_stress_impact_loss
			}
		}
		scope:recipient = {
			add_opinion = {
				target = scope:actor
				modifier = suspicion_opinion
				opinion = -100
			}
			add_character_modifier = {
				modifier = vi_sirenscall_modifier
				years = 5
			}
		}

		scope:actor = {
			send_interface_toast = {
				type = event_toast_effect_bad
				title = vi_siren_call_declined
				right_icon = scope:recipient

				scope:recipient = {
					if = {
						limit = {
							vi_is_vampire_trigger = no
						}
						stress_impact = {
							base = 150
						}
					}
					else = {
						add_character_modifier = {
							modifier = vi_vampire_strain_modifier
							years = 10
						}
						stress_impact = {
							base = major_stress_impact_gain
						}
					}
				}
			}
		}
	}

	ai_accept = {
 		base = -40

		modifier = {
			stress_level >= 3
			vi_is_vampire_trigger = no
			add = 1000
			desc = VI_TOO_STRESSED_TO_REFUSE
		}

		modifier = {
			stress_level = 2
			vi_is_vampire_trigger = no
			add = 50
			desc = VI_VERY_STRESSED
		}

		modifier = {
			vi_is_vampire_trigger = yes
			add = -80
			desc = VI_IS_VAMPIRE
		}

		modifier = {
			OR = {
				has_trait = depressed_1
				has_trait = depressed_genetic
			}
			add = 100
		}

 		opinion_modifier = {
 			opinion_target = scope:actor
 			multiplier = 0.5
 			step = 5
 			max = 50
 		}

 		#Relations & relatives (with actor)
 		modifier = {
 			has_relation_lover = scope:actor
			NOT = {
				has_relation_soulmate = scope:actor
			}
 			add = 25
 			desc = AI_YOUR_LOVER
 		}

		modifier = {
			has_relation_soulmate = scope:actor
			add = 50
			desc = AI_YOUR_SOULMATE
		}

 		modifier = {
 			has_relation_friend = scope:actor
			NOT = {
				has_relation_best_friend = scope:actor
			}
 			add = 10
 			desc = AI_YOUR_FRIEND
 		}

		modifier = {
			has_relation_best_friend = scope:actor
			add = 20
			desc = AI_YOUR_BEST_FRIEND
		}
		
	}

	ai_will_do = {
		base = -50

		modifier = {
			add = 100
			scope:recipient = {
				has_relation_rival = scope:actor
			}
		}

		modifier = {
			add = 100
			scope:recipient = {
				has_relation_nemesis = scope:actor
			}
		}

		modifier = {
			add = -100
			scope:actor = {
				stress_level >= 1
			}
		}

		modifier = {
			add = -1000
			scope:recipient = {
				OR = {
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}
	}
}

vi_instill_fear_interaction = {
	category = interaction_category_hostile
	icon = torture_interaction
	desc = vi_instill_fear_interaction_desc

	#ai_maybe = yes
	#can_send_despite_rejection = yes
	#on_decline_summary = vi_compel_suicide_decline_summary
	cooldown_against_recipient = {
		years = 3
	}

	ai_targets = {
		ai_recipients = scripted_relations
		ai_recipients = vassals
		max = 10
	}

	ai_frequency = 12
	
	is_shown = {
		NOT = {
			scope:actor = scope:recipient
		}
		scope:actor = {
			vi_is_vampire_trigger = yes
			is_ruler = yes
			has_trait_with_flag = vi_can_use_dragon_fear
		}
		NOT = {
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = {
			NOT = {
				has_trait = vi_dragonsscion
			}
		}

		scope:recipient = {
			vi_has_holy_artifact_equipped_trigger = no
		}
	}

	cost = {
		piety = 100
	}

	auto_accept = yes

	on_send = {
		
	}

	on_accept = {
		scope:actor = {
			add_character_modifier = {
				modifier = vi_vampire_strain_modifier
				years = 5
			}
			stress_impact = {
				base = miniscule_stress_impact_gain
			}
			add_dread = 20
		}
		scope:recipient = {
			stress_impact = {
				base = medium_stress_impact_gain
			}
			if = {
				limit = {
					has_dread_level_towards = {
						target = scope:actor
						level >= 2
					}
				}
				scope:actor = {
					add_hook = {
						type = threat_hook
						target = scope:recipient
					}
				}
			}
			send_interface_toast = {
				type = event_toast_effect_bad
				title = vi_instilled_fear
				right_icon = scope:actor

				add_character_modifier = {
					modifier = vi_instilledfear_modifier
					years = 10
				}

				random = {
					chance = {
						value = 1 # one in 100
						if = {
							limit = {
								vi_is_vampire_trigger = no
							}
							add = 4
						}
						if = {
							limit = {
								OR = {
									has_trait = vi_vampire_3
									has_trait = vi_vampire_4
									has_trait = vi_vampire_5
								}
								
							}
							add = -10
						}
					}

					if = {
						limit = {
							has_trait = brave
						}
						remove_trait = brave
					}
					else = {
						add_trait = craven
					}
				}
			}
		}
	}

	ai_will_do = {
		base = -25

		modifier = {
			add = 25
			scope:recipient = {
				opinion = {
					target = scope:actor
					value < 0
				}
			}
		}

		modifier = {
			add = 25
			scope:actor = {
				opinion = {
					target = scope:recipient
					value < 0
				}
			}
		}

		modifier = {
			add = 100
			scope:recipient = {
				has_relation_rival = scope:actor
			}
		}

		modifier = {
			add = 100
			scope:recipient = {
				has_relation_nemesis = scope:actor
			}
		}

		modifier = {
			add = -100
			scope:actor = {
				stress_level >= 1
			}
		}

		modifier = {
			add = -1000
			scope:recipient = {
				OR = {
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}
	}
}

vi_regenerate_interaction = {
	icon = debug_good
	#interface_priority = 30
	common_interaction = yes
	category = interaction_category_admin
	desc = vi_regenerate_interaction_desc

	is_shown = {
		scope:actor = scope:recipient
		scope:actor = {
			has_perk = vi_regeneration_perk
		}
	}
	
	is_highlighted = {
		always = no
	}

	is_valid_showing_failures_only = {
		
		custom_tooltip = {
			text = vi_regeneration_valid_tt
			scope:recipient = {
				OR = {
					has_trait = wounded_1
					has_trait = wounded_2
					has_trait = wounded_3
					has_trait = maimed
					has_trait = leper
					has_trait = one_eyed
					has_trait = one_legged
					has_trait = disfigured
					has_trait = infirm
					has_trait = incapable
					has_trait = blind
					has_trait = eunuch_1
					has_trait = beardless_eunuch
					has_trait = scarred
					# has_trait_xp = {
					# 	trait = scarred
					# 	value >= 20
					# }
				}
			}
			
		}
	}

	# send_option = {
	# 	flag = wounded_1
	# 	is_shown = {
	# 		has_trait = wounded_1
	# 	}
	# 	localization = trait_wounded_1
	# }
	# send_option = {
	# 	flag = wounded_2
	# 	is_shown = {
	# 		has_trait = wounded_2
	# 	}
	# 	localization = trait_wounded_2
	# }
	# send_option = {
	# 	flag = wounded_3
	# 	is_shown = {
	# 		has_trait = wounded_3
	# 	}
	# 	localization = trait_wounded_3
	# }
	# send_option = {
	# 	flag = maimed
	# 	is_shown = {
	# 		has_trait = maimed
	# 	}
	# 	localization = trait_maimed
	# }
	send_option = {
		flag = disfigured
		is_shown = {
			scope:recipient = {
				NOT = {
					has_character_flag = vi_permanently_disfigured
				}
				has_trait = disfigured
			}
			
		}
		localization = trait_disfigured
	}
	send_option = {
		flag = leper
		is_shown = {
			scope:recipient = {
				has_trait = leper
			}
		}
		localization = trait_leper
	}
	send_option = {
		flag = one_eyed
		is_shown = {
			scope:recipient = {
				NOT = {
					has_character_flag = vi_permanently_one_eyed
				}
				has_trait = one_eyed
			}
		}
		localization = trait_one_eyed
	}
	send_option = {
		flag = blind
		is_shown = {
			scope:recipient = {
				NOT = {
					has_character_flag = vi_permanently_blind
				}
				has_trait = blind
			}
		}
		localization = trait_one_eyed
	}
	send_option = {
		flag = eunuch
		is_shown = {
			scope:recipient = {
				NOT = {
					has_character_flag = vi_permanently_eunuch
				}
				OR = {
					has_trait = eunuch_1
					has_trait = beardless_eunuch
				}
			}
			
		}
		localization = trait_eunuch_1
	}
	send_option = {
		flag = scarred
		is_shown = {
			scope:recipient = {
				has_trait = scarred
			}
			
		}
		localization = trait_scarred
	}

	send_options_exclusive = no
	
	on_accept = {
		scope:actor = {
			save_scope_value_as = {
				name = vi_stress
				value = 5
			}
			add_character_modifier = {
				modifier = vi_vampire_strain_modifier
				years = 10
			}
			if = {
				limit = {
					has_trait = wounded_1
				}
				remove_trait = wounded_1
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 10
					}
				}
			}
			if = {
				limit = {
					has_trait = wounded_2
				}
				remove_trait = wounded_2
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 15
					}
				}
				# change_variable = {
				# 	name = vi_stress
				# 	add = 15
				# }
			}
			if = {
				limit = {
					has_trait = wounded_3
				}
				remove_trait = wounded_3
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 20
					}
				}
			}
			if = {
				limit = {
					has_trait = maimed
				}
				remove_trait = maimed
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 30
					}
				}
			}
			if = {
				limit = {
					has_trait = one_legged
				}
				remove_trait = one_legged
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 25
					}
				}
			}
			if = {
				limit = {
					has_trait = infirm
				}
				remove_trait = infirm
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 20
					}
				}
			}
			if = {
				limit = {
					has_trait = incapable
				}
				remove_trait = incapable
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 30
					}
				}
			}
			if = {
				limit = { always = scope:disfigured }
				remove_trait = disfigured
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 10
					}
				}
			}
			if = {
				limit = { always = scope:one_eyed }
				remove_trait = one_eyed
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 10
					}
				}
			}
			if = {
				limit = { always = scope:blind }
				remove_trait = blind
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 20
					}
				}
			}
			if = {
				limit = { always = scope:scarred }
				remove_trait = scarred
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 5
					}
				}
			}
			if = {
				limit = { always = scope:eunuch }
				if = {
					limit = { has_trait = eunuch_1 }
					remove_trait = eunuch_1
				}
				if = {
					limit = { has_trait = beardless_eunuch }
					remove_trait = beardless_eunuch
				}
				save_scope_value_as = {
					name = vi_stress
					value = {
						value = scope:vi_stress
						add = 20
					}
				}
			}
			stress_impact = {
				base = scope:vi_stress
				flagellant = medium_stress_impact_gain
			}
		}
		
	}
	
	auto_accept = {
		# custom_description = {
		# 	text = auto_accept_interaction_ai	
		# 	object = scope:recipient
		# 	scope:recipient = {
		# 		is_ai = yes
		# 	}
		# }
		always = yes
	}

	ai_frequency = 100

	ai_targets = {
		ai_recipients = guests
		ai_recipients = courtiers
	}

	ai_target_quick_trigger = {
		adult = yes
	}

	ai_potential = {
		always = no
		# is_at_war = no
		# OR = {
		# 	has_royal_court = yes
		# 	government_has_flag = government_is_landless_adventurer
		# 	has_government = vi_vampire_government
		# }
		# gold > ai_inspiration_desired_gold_value
		# NOT = { has_character_flag = recently_fund_inspiration }
		# ai_has_conqueror_personality = no
		# ai_should_focus_on_building_in_their_capital = no
	}

	ai_will_do = {
		base = -100
		

	}
}