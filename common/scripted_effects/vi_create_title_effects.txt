vi_procure_estate_interaction_effect = {
	if = {
		limit = {
			scope:piety_option = yes
		}
		if = {
			limit = {
				faith = {
					NOT = {
						this = scope:recipient.faith
					}
				}
			}
			set_character_faith = scope:recipient.faith
			add_character_flag = {
				flag = procure_estate_conversion
				months = 1
			}
		}
		scope:recipient = {
			add_piety = {
				value = procure_estate_interaction_cost_base_piety
				multiply = 0.5
			}
		}
	}
	else_if = {
		limit = {
			scope:gold_option = yes
		}
		show_as_tooltip = {
			pay_short_term_gold = {
				target = scope:recipient
				gold = procure_estate_interaction_cost_base_gold
			}
		}
		hidden_effect = {
			scope:recipient = { add_gold = procure_estate_interaction_cost_base_gold }
		}
	}
	else_if = {
		limit = {
			scope:hook = yes
		}
	}
	else = {
		scope:recipient = {
			add_prestige = {
				value = procure_estate_interaction_cost_base_prestige
				multiply = 0.25
			}
		}
	}
	scope:recipient = {
		change_influence = medium_influence_loss
		add_hook = {
			target = scope:actor
			type = favor_hook
		}
	}
	#Scope:actor becomes ladmin
	scope:actor = {
		if = {
			limit = {
				scope:actor.house ?= {
					any_house_member = {
						any_held_title = {
							is_noble_family_title = yes
						}
						top_liege = {
							this = scope:recipient.top_liege
						}
					}
				}
			}
			found_cadet_house_decision_effect = {
				CHARACTER = scope:actor
				PRESTIGE = major_prestige_gain
			}
		}
		# Note our courtiers so that they don't escape.
		every_courtier = { add_to_list = courtiers_list }
		# Change liege
		destroy_laamp_effect = { ADVENTURER = scope:actor }
		hidden_effect  = {
			scope:recipient.top_liege = {
				add_courtier = scope:actor
				return_to_court = yes
			}
		}
		create_noble_family_effect = yes
		hidden_effect = {
			# Return any escaped courtiers.
			every_in_list = {
				list = courtiers_list
				scope:actor = { add_courtier = prev }
			}
			# And boot any new autogenned arrivals.
			every_courtier = {
				limit = {
					is_lowborn = yes
					NOR = {
						is_in_list = courtiers_list
						is_close_or_extended_family_of = scope:actor
						is_consort_of = scope:actor
						has_important_relationship_trigger = { CHARACTER = scope:actor }
					}
				}
				silent_disappearance_effect = yes
			}
		}
		create_title_and_vassal_change = {
			type = swear_fealty
			add_claim_on_loss = no
			save_scope_as = title_change
		}
		change_liege = {
			liege = scope:recipient.top_liege
			change = scope:title_change
		}
		resolve_title_and_vassal_change = scope:title_change
		change_government = vi_vampire_government

		
	}
	scope:recipient.top_liege = {
		if = {
			limit = {
				is_ai = no
			}
			send_interface_message = {
				type = msg_landless_adventurer_nearby
				title = procure_estate_message_title
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = procure_estate_message_tt
			}
		}
		every_vassal_or_below = {
			limit = {
				is_ai = no
			}
			send_interface_message = {
				type = msg_landless_adventurer_nearby
				title = procure_estate_message_title
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = procure_estate_message_tt
			}
		}
	}
}

vi_adventure_create_princedom_effect = {
	
	save_scope_as = actor
	#Scope:actor becomes ladmin
	domicile.domicile_location.county = {
		save_scope_as = vi_title_county
	}

	if = {
		limit = {
			NOT = {
				this = house.house_head
			}
		}
		found_cadet_house_decision_effect = {
			CHARACTER = scope:actor
			PRESTIGE = major_prestige_gain
		}
	}
	# Note our courtiers so that they don't escape.
	every_courtier = { add_to_list = courtiers_list }
	destroy_laamp_effect = { ADVENTURER = scope:actor }
	
	create_dynamic_title = {
		tier = kingdom
		name = VI_NEW_CREATED_HIGH_PRINCEDOM_NAME
	}

	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}

	hidden_effect = {
		scope:new_title = {
			change_title_holder = {
				holder = scope:actor
				change = scope:change
			}
			set_capital_county = scope:vi_title_county
			set_coa = scope:vi_title_county
			set_landless_title = yes
			set_definitive_form = yes
			add_title_law = vi_vampire_elective_succession_law
		}
	}
	
	resolve_title_and_vassal_change = scope:change

	change_government = vi_vampire_government

	# create_noble_family_effect = yes

	hidden_effect = {
		# Return any escaped courtiers.
		every_in_list = {
			list = courtiers_list
			scope:actor = { add_courtier = prev }
		}
		# And boot any new autogenned arrivals.
		every_courtier = {
			limit = {
				is_lowborn = yes
				NOR = {
					is_in_list = courtiers_list
					is_close_or_extended_family_of = scope:actor
					is_consort_of = scope:actor
					has_important_relationship_trigger = { CHARACTER = scope:actor }
				}
			}
			silent_disappearance_effect = yes
		}
	}
}

vi_create_vassal_princedom_effect = {

	save_scope_as = founder

	$VI_LIEGE$ = {
		save_scope_as = vi_liege
	}

	$VI_COUNTY$ = {
		save_scope_as = vi_title_county

		add_county_modifier = {
			modifier = vi_county_discreet_modifier
			years = 2
		}
	}

	create_dynamic_title = {
		tier = duchy
		name = VI_NEW_CREATED_PRINCEDOM_NAME
	}
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:new_title = {
		change_title_holder = {
			holder = scope:founder
			change = scope:change
		}
		set_capital_county = scope:vi_title_county
		set_coa = scope:vi_title_county
		set_landless_title = yes
		set_definitive_form = yes
		set_de_jure_liege_title = scope:vi_liege.primary_title
		# add_title_law = vi_vampire_elective_succession_law
	}

	change_liege = {
		liege = scope:vi_liege
		change = scope:change
	}
	
	resolve_title_and_vassal_change = scope:change

	change_government = vi_vampire_government

	every_held_title = {
		limit = {
			is_noble_family_title = yes
		}
		set_capital_county = scope:vi_title_county
	}

	vi_recenter_domicile_effect = yes

	# vi_create_noble_family_effect = yes


	# hidden_effect = {
	# 	scope:new_title = {
	# 		# set_de_jure_liege_title = scope:vi_liege.primary_title
	# 		set_coa = scope:vi_title_county
	# 		set_capital_county = scope:vi_title_county
	# 	}
	# }
}

vi_create_noble_family_effect = {

	debug_log = create_noble_family_title

	$VI_COUNTY$ = {
		save_scope_as = vi_title_county
	}

	save_scope_as = new_noble_family_holder
	hidden_effect = { # NF can only be held by house heads
		house ?= {
			if = {
				limit = { house_head != scope:new_noble_family_holder }
				scope:new_noble_family_holder = {
					found_cadet_house_decision_effect = {
						CHARACTER = scope:new_noble_family_holder
						PRESTIGE = 0
					}
				}
			}
		}
	}

	give_noble_family_title = {
		name = noble_family_name
		article = DEFAULT_TITLE_NAME_ARTICLE
		save_scope_as = new_title
	}

	scope:new_title = {
		holder = {
			save_scope_as = noble_family_head
		}
		set_coa = scope:noble_family_head.house

		if = {
			limit = {
				exists = scope:vi_title_county
			}
			set_capital_county = scope:vi_title_county
		}
	}


	custom_description = {
		text = create_noble_family_tt
	}

	#Notifications
	# top_liege ?= {
	# 	every_vassal = {
	# 		limit = {
	# 			is_ai = no
	# 			NOT = { this = scope:new_noble_family_holder }
	# 		}
	# 		trigger_event = {
	# 			id = ep3_emperor_yearly.2410
	# 			days = 1
	# 		}
	# 	}
	# }

	debug_log_scopes = yes
}
