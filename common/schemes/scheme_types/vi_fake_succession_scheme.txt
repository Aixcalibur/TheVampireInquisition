vi_fake_succession_scheme = {
	# Basic Setup
	skill = diplomacy
	desc = "vi_fake_succession_scheme_desc_general"
	success_desc = "vi_fake_succession_scheme_SUCCESS_DESC"
	icon = icon_scheme_foster_legitimacy
	illustration = "gfx/interface/illustrations/event_scenes/fp4_catacombs.dds"
	category = personal
	target_type = character
	#cooldown = { years = 3 }

	uses_resistance = no
	# Parameters
	speed_per_skill_point = t3_spsp_owner_value
	#speed_per_target_skill_point = t3_spsp_target_value
	spymaster_speed_per_skill_point = t3_spsp_owner_spy_value
	target_spymaster_speed_per_skill_point = 0
	
	tier_speed = 1
	base_progress_goal = t2_base_phase_length_value #120
	base_maximum_success = t1_base_max_success_value #20
	base_maximum_success_chance = 90
	phases_per_agent_charge = 1
	success_chance_growth_per_skill_point = t2_scgpsp_value

	is_secret = no

	# Core Triggers
	allow = {
		#has_character_flag = fake_succession_decision_flag
	}

	valid = {
		is_landed = yes
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_basic_suite_modifier = yes
	}
	valid_agent = {
		is_valid_agent_standard_trigger = yes
		OR = {
			scope:owner = {
				is_ai = no
			}
			vi_is_vampire_trigger = yes
			has_trait = vi_dhampir
		}
	}
	agent_groups_owner_perspective = { councillors courtiers }

	odds_prediction = {
		add = odds_skill_contribution_diplomacy_value
		add = agent_groups_owner_perspective_value
	}

	# Base Chances
	base_success_chance = {
		base = 0

		modifier = {
			desc = "VI_NUM_OF_VASSALS"
			add = {
				value = 0
				scope:owner = {
					every_vassal = {
						limit = {
							vi_is_vampire_trigger = no
						}
						add = {
							value = primary_title.title_tier
							multiply = -1
						}
					}
				}
				
			}
		}

		modifier = {
			desc = "VI_MY_TITLE_TIER"
			add = {
				value = scope:owner.primary_title.title_tier
				multiply = -10
			}
		}

		modifier = {
			desc = "VI_MY_REALM_SIZE"
			add = {
				value = scope:owner.sub_realm_size
				if = {
					limit = {
						scope:target.sub_realm_size >= massive_realm_size
					}
					multiply = -2.5
				}
				else_if = {
					limit = {
						scope:target.sub_realm_size >= major_realm_size
					}
					multiply = -2
				}
				else_if = {
					limit = {
						scope:target.sub_realm_size >= medium_realm_size
					}
					multiply = -1.5
				}
				else_if = {
					limit = {
						scope:target.sub_realm_size >= minor_realm_size
					}
					multiply = -1.25
				}
				else = {
					multiply = -1
				}
				round = yes
			}
		}
	}

	# On Actions
	on_start = {
		
		# Fallback agents — a balanced config if you start the scheme from script.
		if = {
			limit = {
				scheme_owner = {
					NOT = { has_variable = agents_added }
				}
			}
			add_agent_slot = agent_physic
			add_agent_slot = agent_diplomat
			add_agent_slot = agent_cleric_success
			add_agent_slot = agent_scribe
			add_agent_slot = agent_planner
		}
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		vi_fake_succession_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { vi_fake_succession_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			vi_fake_succession_prep_effect = yes
		}
	}
	on_monthly = {
		vi_fake_succession_monthly_effect = yes
	}

	## Invalidation
	on_invalidated = {
		
	}
}